CREATE OR REPLACE VIEW "SMART_BI"."CRT_KER_03_SATURATION_IS" ("ENVIRONMENT", "ORDER_ID", "SEQUENCE_NUMBER", "UDM", "SKU", "QUALITY", "SKU_VOLUME", "SKU_WEIGHT", "QUANTITY", "SKU_TYPE", "PRODUCT_CATEGORY", "ARTICLE_SUBCLASS", "FLAG_HAZMAT_SKU", "FLAG_FSC_SKU", "FLAG_JEWELLERY_SKU", "FLAG_PACKAGING_JEWELLERY_SKU", "FLAG_HALMARKING_SKU", "FLAG_CITES_SKU", "FLAG_CEE_SKU", "PARCEL_TYPE_FORECAST", "PARCEL_TYPE_ORDERINSUPDATE", "PARCEL_TYPE_ACTUAL", "INTERNAL_HEIGHT_PARCEL_FORECAST", "INTERNAL_WIDTH_PARCEL_FORECAST", "INTERNAL_LENGTH_PARCEL_FORECAST", "INTERNAL_VOLUME_PARCEL_FORECAST", "EXTERNAL_HEIGHT_PARCEL_FORECAST", "EXTERNAL_WIDTH_PARCEL_FORECAST", "EXTERNAL_LENGTH_PARCEL_FORECAST", "EXTERNAL_VOLUME_PARCEL_FORECAST", "INTERNAL_HEIGHT_PARCEL_ACTUAL", "INTERNAL_WIDTH_PARCEL_ACTUAL", "INTERNAL_LENGTH_PARCEL_ACTUAL", "INTERNAL_VOLUME_PARCEL_ACTUAL", "EXTERNAL_HEIGHT_PARCEL_ACTUAL", "EXTERNAL_WIDTH_PARCEL_ACTUAL", "EXTERNAL_LENGTH_PARCEL_ACTUAL", "EXTERNAL_VOLUME_PARCEL_ACTUAL", "PIECES_WEIGHT", "EMPTY_PARCEL_WEIGHT", "PARCEL_WEIGHT", "INTEGRATION_DATE", "TK05_PACKED_DATE", "BUILDING_NAME", "PACKING_STATION_ID", "PACKING_USER", "CUSTOMER_CODE", "COUNTRY", "FLOW", "CHANNEL", "BRAND", "UPDATED_DATE", "ISDELETED", "REFLEX_ORDER", "REFLEX_PREPERATION", "CARTON_LINE_SEQUENCE") AS
SELECT 					
    'Reflex WEB B' AS "ENVIRONMENT",
    ORDER_ID,
    SEQUENCE_NUMBER,
    UDM,
    SKU,
    QUALITY,
    SUM(SKU_VOLUME) AS "SKU_VOLUME",
    SUM(SKU_WEIGHT) AS "SKU_WEIGHT",
    SUM(QUANTITY) AS "QUANTITY", 
    SKU_TYPE,
    PRODUCT_CATEGORY,
    ARTICLE_SUBCLASS,
    FLAG_HAZMAT_SKU,
    FLAG_FSC_SKU,
    FLAG_JEWELLERY_SKU,
    FLAG_PACKAGING_JEWELLERY_SKU,
    FLAG_HALMARKING_SKU,
    FLAG_CITES_SKU,
    FLAG_CEE_SKU,		
    PARCEL_TYPE_FORECAST,
    PARCEL_TYPE_ORDERINSUPDATE,
    PARCEL_TYPE_ACTUAL,
    INTERNAL_HEIGHT_PARCEL_FORECAST,
    INTERNAL_WIDTH_PARCEL_FORECAST,
    INTERNAL_LENGTH_PARCEL_FORECAST,
    INTERNAL_VOLUME_PARCEL_FORECAST,
    EXTERNAL_HEIGHT_PARCEL_FORECAST,
    EXTERNAL_WIDTH_PARCEL_FORECAST,
    EXTERNAL_LENGTH_PARCEL_FORECAST,
    EXTERNAL_VOLUME_PARCEL_FORECAST,
    INTERNAL_HEIGHT_PARCEL_ACTUAL,
    INTERNAL_WIDTH_PARCEL_ACTUAL,
    INTERNAL_LENGTH_PARCEL_ACTUAL,
    INTERNAL_VOLUME_PARCEL_ACTUAL,
    EXTERNAL_HEIGHT_PARCEL_ACTUAL,
    EXTERNAL_WIDTH_PARCEL_ACTUAL,
    EXTERNAL_LENGTH_PARCEL_ACTUAL,
    EXTERNAL_VOLUME_PARCEL_ACTUAL,
    MAX(PIECES_WEIGHT) AS "PIECES_WEIGHT",
    EMPTY_PARCEL_WEIGHT,
    MAX(PARCEL_WEIGHT) AS "PARCEL_WEIGHT",
    TRY_TO_TIMESTAMP(INTEGRATION_DATE, 'DD/MM/YYYY HH24:MI') AS "INTEGRATION_DATE",
    TRY_TO_TIMESTAMP(TK05_PACKED_DATE, 'DD/MM/YYYY') AS "TK05_PACKED_DATE",
    'B' AS "BUILDING_NAME",	
    COALESCE(PACKING_STATION_ID, ' ') AS "PACKING_STATION_ID",
    COALESCE(PACKING_USER, ' ') AS "PACKING_USER",
    CUSTOMER_CODE,
    COUNTRY,
    FLOW,
    CHANNEL,
    BRAND,
    UPDATED_DATE,
    '0' AS "ISDELETED",
    REFLEX_ORDER,
    REFLEX_PREPERATION,
    CARTON_LINE_SEQUENCE
FROM (
    SELECT 
        CHILD.SHRDOR AS ORDER_ID,
        CD.CDSTSE AS SEQUENCE_NUMBER, 
        GE.GENCOL AS UDM,
        CA.CABRDC AS BRAND,
        CA.CASKUC AS SKU, 
        GE.GEQGEI AS QUANTITY, 
        CA.CASTNO AS SKU_TYPE,
        CA.CAPRCA AS PRODUCT_CATEGORY,
        C5.C5CTCO AS PARCEL_TYPE_ACTUAL,
        PRECUBING_PARCELS.FORECAST_PARCEL_TYPE AS PARCEL_TYPE_FORECAST,
        COALESCE(ORPKID, 'N/A') AS PARCEL_TYPE_ORDERINSUPDATE,
        GE.GEQGEI * CA.CAPHGH * CA.CAPWID * CA.CAPDPT / 1000 AS SKU_VOLUME,
        O3.O3MPCP AS PARCEL_WEIGHT,
        GE.GEPNGE AS SKU_WEIGHT,
        O3.O3MPCO AS PIECES_WEIGHT,
        CASE
            WHEN SUBSTR(PRHSID_SUB,1,3) IN ('RET','ECO') THEN SUBSTR(PRHSID_SUB, 1, 5)
            WHEN INSTR(PRHSID_SUB, '.') > 0 THEN SUBSTR(PRHSID_SUB, 1, INSTR(PRHSID_SUB, '.') - 1)
            WHEN INSTR(PRHSID_SUB,'.') = 0 THEN 'Manual' 
            ELSE 'OTHER'
        END AS PACKING_STATION_ID,
        PRUAEN_SUB AS PACKING_USER,
        P1.P1CQAL AS QUALITY,
        CA.CASCLA AS ARTICLE_SUBCLASS,
        CHILD.SHTHZM AS FLAG_HAZMAT_SKU,
        CHILD.SHTFSC AS FLAG_FSC_SKU,
        CHILD.SHTJEW AS FLAG_JEWELLERY_SKU,
        CHILD.SHTPKJ AS FLAG_PACKAGING_JEWELLERY_SKU,
        CHILD.SHTHMK AS FLAG_HALMARKING_SKU,
        CHILD.SHTCIT AS FLAG_CITES_SKU,
        CASE WHEN CHILD.SHTCEE = '1' THEN 'CEE' ELSE 'Extra' END AS FLAG_CEE_SKU,
        FORECAST_INT_H AS INTERNAL_HEIGHT_PARCEL_FORECAST,
        FORECAST_INT_W AS INTERNAL_WIDTH_PARCEL_FORECAST,
        FORECAST_INT_L AS INTERNAL_LENGTH_PARCEL_FORECAST,
        FORECAST_INT_V AS INTERNAL_VOLUME_PARCEL_FORECAST,
        FORECAST_EXT_H AS EXTERNAL_HEIGHT_PARCEL_FORECAST,
        FORECAST_EXT_W AS EXTERNAL_WIDTH_PARCEL_FORECAST,
        FORECAST_EXT_L AS EXTERNAL_LENGTH_PARCEL_FORECAST,
        FORECAST_EXT_V AS EXTERNAL_VOLUME_PARCEL_FORECAST,
        PARCEL_ACTUALS.O1MHUT AS INTERNAL_HEIGHT_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MPUT AS INTERNAL_WIDTH_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MLUT AS INTERNAL_LENGTH_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MVUT AS INTERNAL_VOLUME_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MHHT AS EXTERNAL_HEIGHT_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MPHT AS EXTERNAL_WIDTH_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MLHT AS EXTERNAL_LENGTH_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MVHT AS EXTERNAL_VOLUME_PARCEL_ACTUAL,
        PARCEL_ACTUALS.O1MPCV AS EMPTY_PARCEL_WEIGHT,
        TO_CHAR(CHILD.SHDCOR, 'DD/MM/YYYY HH24:MI') AS INTEGRATION_DATE,
        TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY') AS TK05_PACKED_DATE,
        PE.PECDES AS CUSTOMER_CODE,
        CHILD.SHPAYD AS COUNTRY,
        CHILD.SHFLOW AS FLOW,
        CHILD.SHCHAN AS CHANNEL,
        CD.HVR_CHANGE_TIME AS UPDATED_DATE,
        LPAD(OL.OLNANN::STRING,2,0)||'/'||LPAD(OL.OLNODP::STRING,9,0) AS REFLEX_ORDER,
        LPAD(PE.PENANN::STRING,2,0)||'/'||LPAD(PE.PENPRE::STRING,9,0) AS REFLEX_PREPERATION,
        OL.OLLROP AS CARTON_LINE_SEQUENCE
    FROM MODELS.KERING_GLOBE.HLGEINP GE
    INNER JOIN MODELS.KERING_GLOBE.HLCOLIP C5 ON GE.GENCOL = C5.C5NCOL
    INNER JOIN MODELS.KERING_GLOBE.HLCOLPP O3 ON C5.C5NCOL = O3.O3NCOL
    INNER JOIN MODELS.KERING_GLOBE.HLTYCOP PARCEL_TYPES_ACTUALS ON C5.C5CTCO = PARCEL_TYPES_ACTUALS.YCCTCO
    INNER JOIN MODELS.KERING_GLOBE.HLTYCPP PARCEL_ACTUALS ON C5.C5CTCO = PARCEL_ACTUALS.O1CTCO
    INNER JOIN MODELS.KERING_GLOBE.HLLPRGP LG ON LG.LGCACT = GE.GECACT AND LG.LGCDPO = GE.GECDPO AND LG.LGNGEI = GE.GENGEI
    INNER JOIN MODELS.KERING_GLOBE.HLPRPLP P1 ON P1.P1CACT = LG.LGCACT AND P1.P1CDPO = LG.LGCDPO AND P1.P1NANN = LG.LGNANN AND P1.P1NLPR = LG.LGNLPR
    INNER JOIN MODELS.KERING_GLOBE.HLODPLP OL ON P1.P1CACT = OL.OLCACT AND P1.P1CDPO = OL.OLCDPO AND P1.P1NANO = OL.OLNANN AND P1.P1NODP = OL.OLNODP AND P1.P1NLOP = OL.OLNLOP
    INNER JOIN MODELS.KERING_GLOBE.HLPRENP PE ON P1.P1CACT = PE.PECACT AND P1.P1CDPO = PE.PECDPO AND P1.P1NANP = PE.PENANN AND P1.P1NPRE = PE.PENPRE
    INNER JOIN MODELS.KERING_GLOBE.KBSHIPP CHILD ON CHILD.SHCACT = P1.P1CACT AND CHILD.SHCDEP = P1.P1CDPO AND CHILD.SHNANN = P1.P1NANN AND CHILD.SHNPRP = P1.P1NPRE
    INNER JOIN MODELS.KERING_GLOBE.KBCARTP CA ON P1.P1CACT = CA.CACACT AND P1.P1CART = CA.CASKUC
    INNER JOIN MODELS.KERING_GLOBE.KBMCLDP CD ON CD.CDCACT = P1.P1CACT AND CD.CDCDPO = P1.P1CDPO AND CD.CDRCDE = PE.PERODP AND CD.CDRLCD = OL.OLLROP AND CD.CDNCOL = GE.GENCOL
    LEFT JOIN (
        SELECT HOCDPO, HOCACT, HORCDE, HOSTSE, HORLCD, MAX(HOTCOL) AS FORECAST_PARCEL_TYPE,
            MAX(O1MHUT) AS FORECAST_INT_H, MAX(O1MPUT) AS FORECAST_INT_W, MAX(O1MLUT) AS FORECAST_INT_L, MAX(O1MVUT) AS FORECAST_INT_V,
            MAX(O1MHHT) AS FORECAST_EXT_H, MAX(O1MPHT) AS FORECAST_EXT_W, MAX(O1MLHT) AS FORECAST_EXT_L, MAX(O1MVHT) AS FORECAST_EXT_V
        FROM MODELS.KERING_GLOBE.KBMHLPP HO
        INNER JOIN MODELS.KERING_GLOBE.HLTYCPP ON O1CTCO = HOTCOL
		WHERE HO.DET_IS_DELETED = FALSE AND HLTYCPP.DET_IS_DELETED = FALSE
        GROUP BY HOCDPO, HOCACT, HORCде, HOSTSE, HORLCD
    ) PRECUBING_PARCELS ON PRECUBING_PARCELS.HOCDPO = CD.CDCDPO AND PRECUBING_PARCELS.HOCACT = CD.CDCACT AND PRECUBING_PARCELS.HORCDE = CD.CDRCDE AND PRECUBING_PARCELS.HORLCD = CD.CDRLCD AND PRECUBING_PARCELS.HOSTSE = CD.CDSTSE
    LEFT JOIN MODELS.KERING_GLOBE.KBDORDP OR_ ON OR_.ORCDPO = CD.CDCDPO AND OR_.ORCACT = CD.CDCACT AND OR_.ORORID = CD.CDSTSE AND OR_.DET_IS_DELETED = FALSE
    LEFT JOIN (
        SELECT PRCDPO, PRLUID, PRTAEN, MIN(PRHSID)::STRING AS PRHSID_SUB, MIN(PRUAEN)::STRING AS PRUAEN_SUB
        FROM MODELS.KERING_GLOBE.KBDPREP
        WHERE PRTAEN = '0' AND DET_IS_DELETED = FALSE
        GROUP BY PRCDPO, PRLUID, PRTAEN
    ) PACKING_REPORT ON PACKING_REPORT.PRCDPO = GE.GECDPO AND PACKING_REPORT.PRLUID = GE.GENCOL
    WHERE GE.DET_IS_DELETED = FALSE
        AND C5.DET_IS_DELETED = FALSE AND O3.DET_IS_DELETED = FALSE
        AND PARCEL_TYPES_ACTUALS.DET_IS_DELETED = FALSE AND PARCEL_ACTUALS.DET_IS_DELETED = FALSE
        AND LG.DET_IS_DELETED = FALSE AND P1.DET_IS_DELETED = FALSE
        AND OL.DET_IS_DEleted = FALSE AND PE.DET_IS_DELETED = FALSE
        AND CHILD.DET_IS_DELETED = FALSE AND CA.DET_IS_DELETED = FALSE
        AND CD.DET_IS_DELETED = FALSE
        AND CD.HVR_CHANGE_TIME > (SELECT (DATEADD(hour, -4, or2.LAST_UPDATE))::DATE FROM OBJECT_RUN or2 WHERE "OBJECT" = '03_SATURATION')
)
GROUP BY 
    ORDER_ID, SEQUENCE_NUMBER, UDM, SKU, QUALITY, QUANTITY, SKU_TYPE, PRODUCT_CATEGORY,
    ARTICLE_SUBCLASS, FLAG_HAZMAT_SKU, FLAG_FSC_SKU, FLAG_JEWELLERY_SKU, FLAG_PACKAGING_JEWELLERY_SKU,
    FLAG_HALMARKING_SKU, FLAG_CITES_SKU, FLAG_CEE_SKU, PARCEL_TYPE_FORECAST, PARCEL_TYPE_ORDERINSUPDATE,
    PARCEL_TYPE_ACTUAL, INTERNAL_HEIGHT_PARCEL_FORECAST, INTERNAL_WIDTH_PARCEL_FORECAST,
    INTERNAL_LENGTH_PARCEL_FORECAST, INTERNAL_VOLUME_PARCEL_FORECAST, EXTERNAL_HEIGHT_PARCEL_FORECAST,
    EXTERNAL_WIDTH_PARCEL_FORECAST, EXTERNAL_LENGTH_PARCEL_FORECAST, EXTERNAL_VOLUME_PARCEL_FORECAST,
    INTERNAL_HEIGHT_PARCEL_ACTUAL, INTERNAL_WIDTH_PARCEL_ACTUAL, INTERNAL_LENGTH_PARCEL_ACTUAL,
    INTERNAL_VOLUME_PARCEL_ACTUAL, EXTERNAL_HEIGHT_PARCEL_ACTUAL, EXTERNAL_WIDTH_PARCEL_ACTUAL,
    EXTERNAL_LENGTH_PARCEL_ACTUAL, EXTERNAL_VOLUME_PARCEL_ACTUAL, EMPTY_PARCEL_WEIGHT, INTEGRATION_DATE,
    TK05_PACKED_DATE, PACKING_STATION_ID, PACKING_USER, CUSTOMER_CODE, COUNTRY, FLOW, CHANNEL, BRAND,
    UPDATED_DATE, REFLEX_ORDER, REFLEX_PREPERATION, CARTON_LINE_SEQUENCE;