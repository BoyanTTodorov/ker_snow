CREATE OR REPLACE VIEW "SMART_BI"."CRT_KER_04_STOCK" (
    "ENVIRONMENT", "UDM", "SKU", "QUALITY", "LOCATION", "QUANTITY", "SKU_TYPE", "INBOUND_DATE", 
    "EAN", "MODEL", "PART", "COLOUR", "SIZE", "DROP", "PRODUCT_CATEGORY", "PRODUCT_SUBCATEGORY", 
    "TECHNICAL_CLASS", "TECHNICAL_SUBCLASS", "STYLE_MATERIAL_VARIANT", "OD_ASSOCIATED", "ITEM_DESCRIPTION", 
    "BRAND", "INBOUND_REFERENCE", "ASN", "BUILDING", "AISLE", "BUILDING_PHYSICAL", "LOCATION_TYPE", 
    "SAP_VISIBILITY", "STORAGE_AREA", "REFLEX_RECEIPT_ID", "OWNER", "INVOICED_FLAG", "HANG_FLAT_FLAG", 
    "CITES_FLAG", "DANGEROUS_FLAG", "ALCOHOL_FLAG", "PIECE_WEIGHT", "WEIGHT_UOM", "PIECE_HEIGHT", 
    "PIECE_WIDTH", "PIECE_DEPTH", "PIECE_VOLUME", "VOLUME_UOM", "MADE_IN", "STORAGE_FAMILY", 
    "PREPARATION_FAMILY", "UPDATED_DATE"
) AS
SELECT
    'Reflex WEB B' AS "ENVIRONMENT",
    sunsup AS UDM,
    CASKUC AS SKU,
    gecqal AS QUALITY,
    emc1em || emc2em || emc3em || emc4em || emc5em AS "LOCATION",
    geqgei AS QUANTITY,
    CA.CASTNO AS SKU_TYPE,
    -- Converted from string concatenation to a valid DATE type
    TRY_TO_DATE(GEACRE || '-' || GEMCRE || '-' || GEJCRE, 'YYYY-MM-DD') AS INBOUND_DATE,
    EAN_DATA.VICIVL AS "EAN",
    CA.CALMOD AS "MODEL",
    CA.CAPART AS "PART",
    CA.CACOLC AS "COLOUR",
    CA.CASIZC AS "SIZE",
    CA.CADROP AS "DROP",
    CA.CAPRCA AS "PRODUCT_CATEGORY",
    CA.CAPRFA AS "PRODUCT_SUBCATEGORY",
    CA.CADEGR AS "TECHNICAL_CLASS",
    CA.CASUDE AS "TECHNICAL_SUBCLASS",
    CA.CAMATN AS STYLE_MATERIAL_VARIANT,
    CASE WHEN GE.GENPRL = 0 THEN 'NO' ELSE 'YES' END AS "OD_ASSOCIATED",
    CADESC AS ITEM_DESCRIPTION,
    CABRDC AS BRAND,
    RENBLF AS INBOUND_REFERENCE,
    RERREC AS "ASN",
    'B' AS "BUILDING",
    EMC1EM AS AISLE,
    CASE
        WHEN EMNEMP IN (3874) THEN 'B1'
        WHEN EMNEMP IN (3875) THEN 'B2'
        ELSE EMC5EM::STRING
    END AS BUILDING_PHYSICAL,
    EMCTYE AS LOCATION_TYPE,
    CASE
        WHEN (INBOUND_INTERFACES.TK03_DATETIME IS NULL AND O40.O40TSTP IS NULL)
          OR INVOICE_DATA.SHCINV IS NOT NULL
          OR GECQAL NOT IN ('1ST', 'QIN', 'TBR', 'PLO', 'EQI', 'RPL', 'ERP', '2ND', 'SPL', 'E2P', 'PPL', 'EPL', 'E1P', 'FRE', 'FPL', 'SHO', 'OVE', 'DAM', 'DPL', 'EDP', 'FRC', 'BCN')
          OR GECART NOT LIKE '8%'
          OR GECPRP NOT IN ('AMG', 'AMF', 'AMM', 'BAG', 'BAF', 'BAM', 'BVG', 'BVF', 'BVM', 'GUG', 'GUF', 'GUM', 'SLG', 'SLF', 'SLM')
        THEN 'NOT_VISIBLE'
        WHEN GECMBG IN ('PTW','RMQ') THEN 'VISIBLE_BLOCKED'
        ELSE 'VISIBLE'
    END AS SAP_VISIBILITY,
    CASE
        WHEN EMC1EM LIKE '1S%' OR EMC1EM LIKE '2S%' THEN 'SHELVES'
        WHEN SUBSTR(EMC1EM,1,2) IN ('0T','1T','2T','3T','1M') THEN 'MEZZANINE' 
        WHEN EMC1EM LIKE '0R%' THEN 'RACKS'
        WHEN (EMC1EM LIKE '1G%' OR EMC1EM LIKE '2G%' OR EMC1EM LIKE '3G%' OR EMC1EM LIKE '0G%') THEN 'GOH'
        WHEN EMNEMP IN (3874) THEN 'DMS_STATIC' 
        WHEN EMNEMP IN (3875) THEN 'DMS_FLEX'
        WHEN EMC1EM LIKE '%CD' OR EMC1EM LIKE '%CS' THEN 'CONSIGNMENT'
        WHEN EMC1EM LIKE '0D%' THEN 'DANGEROUS'
        WHEN (EMC1EM LIKE '1J%' OR EMC1EM LIKE '2J%' OR EMC1EM LIKE '3J%' OR EMC1EM LIKE '0J%') THEN 'JEWELRY'
        ELSE 'OTH'
    END AS "STORAGE_AREA",
    LPAD(GENANN::STRING, 2, 0) || '/' || LPAD(GENREC::STRING, 9, 0) AS REFLEX_RECEIPT_ID,
    GECPRP AS "OWNER",
    CASE WHEN INVOICE_DATA.SHCINV IS NULL THEN 0 ELSE 1 END AS INVOICED_FLAG,
    CAHFFG AS HANG_FLAT_FLAG,
    CATCIT AS CITES_FLAG,
    CAIHAM AS DANGEROUS_FLAG,
    CAICAL AS ALCOHOL_FLAG,
    CAPWGH AS PIECE_WEIGHT,
    CAWTUM AS WEIGHT_UOM,
    CAPHGH AS PIECE_HEIGHT,
    CAPWID AS PIECE_WIDTH,
    CAPDPT AS PIECE_DEPTH,
    CAPVOL AS PIECE_VOLUME,
    CAVUOM AS VOLUME_UOM,
    CAMDIN AS MADE_IN,
    VLCFAS AS STORAGE_FAMILY,
    VLCFPR AS PREPARATION_FAMILY,
    -- Kept as NULL to match original view logic. See notes.
    -- GREATEST(GE.HVR_CHANGE_TIME, SU.HVR_CHANGE_TIME, EM.HVR_CHANGE_TIME) AS "UPDATED_DATE"
    NULL AS "UPDATED_DATE"
FROM MODELS.KERING_GLOBE.hlgeinp ge
INNER JOIN MODELS.KERING_GLOBE.hlsuppp su ON ge.gensup = su.sunsup
INNER JOIN MODELS.KERING_GLOBE.hlemplp em ON su.sunemp = em.emnemp
LEFT JOIN MODELS.KERING_GLOBE.HLTYEMP ty ON em.EMCTYE = ty.TYCTYE
LEFT JOIN MODELS.KERING_GLOBE.HLRECPP RE ON RE.recact = ge.gecact AND RE.renann = ge.genann AND ge.genrec = RE.renrec AND RE.DET_IS_DELETED = FALSE
RIGHT JOIN MODELS.KERING_GLOBE.kbcartp CA ON ge.gecart = CA.CASKUC AND CA.DET_IS_DELETED = FALSE
LEFT JOIN MODELS.KERING_GLOBE.hlarvlp VL ON CA.cacact = VL.vlcact AND CA.caskuc = VL.vlcart AND VL.vlcvla = '03' AND VL.DET_IS_DELETED = FALSE
LEFT JOIN (
    SELECT CHCDPO, CHCACT, CHNANN, CHNREC, CHNANF, CHNRFI, MIN(CHDET3) AS TK03_DATETIME
    FROM MODELS.KERING_GLOBE.KBRECHP
    WHERE DET_IS_DELETED = FALSE
    GROUP BY CHCDPO, CHCACT, CHNANN, CHNREC, CHNANF, CHNRFI
) INBOUND_INTERFACES ON INBOUND_INTERFACES.CHCDPO = GE.GECDPO AND INBOUND_INTERFACES.CHCACT = GE.GECACT AND INBOUND_INTERFACES.CHNANF = GE.GENANN AND INBOUND_INTERFACES.CHNRFI = GE.GENREC
LEFT JOIN (
    SELECT shrdor, PRCNPRE, PRCCDPO, PRCCACT, PRCNCOL, SHCINV
    FROM MODELS.KERING_GLOBE.HLPRCOP
    INNER JOIN MODELS.KERING_GLOBE.KBSHIPP Y ON PRCCACT = SHCACT AND PRCCDPO = SHCDEP AND PRCNANN = SHNANN AND PRCNPRE = SHNPRP
    WHERE SHCINV <> ' ' AND Y.DET_IS_DELETED = FALSE
    GROUP BY PRCNCOL, SHCINV, PRCCDPO, PRCCACT, PRCNPRE, shrdor
) INVOICE_DATA ON GE.GECACT = INVOICE_DATA.PRCCACT AND GE.GECDPO = INVOICE_DATA.PRCCDPO AND GE.GENCOL = INVOICE_DATA.PRCNCOL
LEFT JOIN MODELS.KERING_GLOBE.XPSTOCP O40 ON O40.O40NGEI = GE.GENGEI AND O40.DET_IS_DELETED = FALSE
LEFT JOIN (
    -- Replaced complex subquery with efficient QUALIFY clause
    SELECT *
    FROM MODELS.KERING_GLOBE.HLVLIDP
    WHERE VICTYI = 'EAN13' AND DET_IS_DELETED = FALSE
    QUALIFY ROW_NUMBER() OVER (PARTITION BY VICART ORDER BY VIACRE DESC, VIMCRE DESC, VIJCRE DESC, VIHCRE DESC) = 1
) EAN_DATA ON EAN_DATA.VICACT = CA.CACACT AND EAN_DATA.VICART = CA.CASKUC
WHERE GE.GECACT = '100' AND GE.GECDPO = '001'
  AND GE.GECTST IN ('200')
  AND GE.DET_IS_DELETED = FALSE;