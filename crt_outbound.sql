CREATE OR REPLACE VIEW "SMART_BI"."CRT_KER_02_OUTBOUND" (
    "PK_FACT_OUTBOUND", "INTEGRATION_DATE", "ENVIRONMENT", "BUILDING", "REFLEX_CLIENT", "REFLEX_DESTINATION", 
    "WAVING_DATE", "WAVING_CODE", "ORDER_INSERT_UPDATE", "SHIPPING_REQUEST", "BRAND", "SAP_ORDERID", 
    "CUSTOMER_CODE", "COUNTRY", "SAP_CARRIER", "REFLEX_CARRIER", "CARRIER_NAME", "OWNER", "QUALITY", 
    "PREPARATION_NUMBER", "DELIVERY_DATE", "LOAD_DATE", "LOAD_CODE", "RDV", "PLATE_NUMBER", "TRUCK_DEPARTURE", 
    "TK35_TRANSMISSION", "TK05_PACKED_DATE", "TK05_SHIPPED_DATE", "INVOICE_CODE", "TRUCK_GATE_ARRIVAL", 
    "TRUCK_BAY_ARRIVAL", "EVENT_490", "INVOICE_DATE", "QUANTITY_ORDERED", "QUANTITY_PICKED", "QUANTITY_PACKED", 
    "QUANTITY_DMS", "PARCELS_LOADED", "PIECES_LOADED", "CARTONS", "TK05_CANCEL_FLAG", "TK05_CANCEL_DATE", 
    "PLANNED_PACKING_DATE", "LATEST_PLANNED_PACKING_DATE", "INITIAL_PICKUP_DATE", "PICKUP_DATE", 
    "FLOW", "FLOW_DESCRIPTION", "FLAG_HAZMAT", "FLAG_FSC", "FLAG_JEWELLERY", "FLAG_PACKAGING_JEWELLERY", 
    "FLAG_HALMARKING", "HALMARKING_STATUS", "FLAG_IMPACT_CITES", "CITES_STATUS", "VAS_FLAG", "VAS_CODE", 
    "VAS_CLUSTER", "SAP_MEAN_OF_TRANSPORT", "REFLEX_MEAN_OF_TRANSPORT", "CLUSTER", "CHANNEL", "FLAG_CEE", 
    "FLAG_IS_TO_SHIP", "FLAG_IS_STOP", "FLAG_IS_CANCELLED", "FLAG_MAX_ATTENTION", "PRIORITY", "DOCUMENT_TYPE", 
    "FLOW_TYPE", "ROUTE", "SHIPPING_CONDITION", "CODE_DELIVERY_GROUP", "DELIVERY_BLOCK", "SHIPMENT_BLOCKED", 
    "FLAG_IS_RELEASE_OD", "EXTERNAL_ID", "ORDER_ID_SENT_IN_TK05", "FLAG_URGENT", "FLAG_CUT_OFF", 
    "FLAG_DMM_RECALCULATION", "DMM_PICKUP", "DMM_PACKING", "COMMENTI", "FLAG_ORDER_DESACTIVATED", 
    "CREATED_DATE", "UPDATED_DATE", "ISDELETED", "PRODUCT_CATEGORY"
) AS
SELECT 
    MD5('B' || COALESCE(OE.OENANN::STRING, 'NA') || COALESCE(OE.OENODP::STRING, 'NA') || COALESCE(PE.PECACT, 'NA') || COALESCE(PE.PECDPO, 'NA') || COALESCE(PE.PERODP, 'NA') || COALESCE(PE.PENANN::STRING, 'NA') || COALESCE(PE.PENPRE::STRING, 'NA')) AS "PK_FACT_OUTBOUND",
    MOTHER.SHDCOR::TIMESTAMP_NTZ(6) AS INTEGRATION_DATE,
    'Reflex WEB B' AS ENVIRONMENT,
    'B' AS BUILDING,
    SUBSTR(PREP_LINES.GRADE, 1, 3) AS REFLEX_CLIENT,
    PE.PECDES AS REFLEX_DESTINATION,
    TRY_TO_TIMESTAMP(SUBSTR(PREP_LINES.WAVE, 1, 16), 'YY-MM-DD HH24:MI') AS WAVING_DATE,
    SUBSTR(PREP_LINES.WAVE, 18, 3) AS WAVING_CODE,
    CASE WHEN CO.CORCDE IS NULL THEN ' ' ELSE 'SENT' END AS ORDER_INSERT_UPDATE,
    CASE WHEN COALESCE(SG1.CGCOD, SG2.CGCOD) IS NULL THEN ' ' ELSE 'DONE' END AS SHIPPING_REQUEST,
    COALESCE(MOTHER.SHCDOR, CHILD.SHCDOR) AS BRAND,
    COALESCE(MOTHER.SHRDOR, CHILD.SHRDOR) AS SAP_ORDERID,
    OE.OECDES AS CUSTOMER_CODE,
    COALESCE(MOTHER.SHPAYD, CHILD.SHPAYD) AS COUNTRY,
    MOTHER.SHCTRP AS SAP_CARRIER,
    CG.CGCTRP AS REFLEX_CARRIER,
    TP.TPLTRP AS CARRIER_NAME,
    SUBSTR(PREP_LINES.GRADE, 1, 3) AS OWNER,
    SUBSTR(PREP_LINES.GRADE, 4, 3) AS QUALITY,
    LPAD(COALESCE(CHILD.SHNANN, PE.PENANN)::STRING, 2, '0') || '/' || LPAD(COALESCE(CHILD.SHNPRP, PE.PENPRE)::STRING, 9, '0') AS PREPARATION_NUMBER,
    COALESCE(MOTHER.SHDDEL, CHILD.SHDDEL) AS DELIVERY_DATE,
    TRY_TO_DATE(LPAD(PE.PESSCA, 2, '0') || LPAD(PE.PEANCA, 2, '0') || LPAD(PE.PEMOCA, 2, '0') || LPad(PE.PEJOCA, 2, '0'), 'CCYYMMDD') AS LOAD_DATE,
    PE.PECCHA AS LOAD_CODE,
    CASE WHEN U9.U9NARV > 0 THEN LPAD(U9.U9NARV::STRING, 2, '0') || '/' || LPAD(U9.U9NRDV::STRING, 9, '0') ELSE ' ' END AS RDV,
    CG.CGNPLC AS PLATE_NUMBER,
    NULL AS TRUCK_DEPARTURE, -- Field disabled as per original query comment
    HU.TK35HEURE AS TK35_TRANSMISSION,
    CHILD.SHDTKP AS TK05_PACKED_DATE,
    CHILD.SHDTKS AS TK05_SHIPPED_DATE,
    COALESCE(MOTHER.SHCINV, CHILD.SHCINV) AS INVOICE_CODE,
    YMX.MO_ARRIVAL_DATE AS TRUCK_GATE_ARRIVAL,
    YMX.MO_BAY_DATE AS TRUCK_BAY_ARRIVAL,
    YMX.MO_DEPARTURE_DATE AS EVENT_490,
    COALESCE(MOTHER.SHDINV, CHILD.SHDINV) AS INVOICE_DATE,
    CASE WHEN PE.PETSOP = '1' AND PE.PETSOL = '1' THEN 0 ELSE PREP_LINES.QTY_ORDERED END AS QUANTITY_ORDERED,
    PE.PETBPV AS QUANTITY_PICKED,
    CASE WHEN PE.PETSOP = '1' THEN PE.PETBPV ELSE COALESCE(PREP_LINES_QTY.QTY_PACK, 0) END AS QUANTITY_PACKED,
    CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN 0 ELSE COALESCE(DMS_SUB.QTY_DMS, 0) END AS QUANTITY_DMS,
    CASE WHEN PE.PETSOP = '1' THEN COALESCE(GS.QTY_COL_EXP, 0) ELSE COALESCE(QTY_COL_LOAD, 0) END AS PARCELS_LOADED,
    CASE WHEN PE.PETSOP = '1' THEN COALESCE(GS.QTY_PIE_EXP, 0) ELSE COALESCE(QTY_PIE_LOAD, 0) END AS PIECES_LOADED,
    CASE WHEN PE.PETSOP = '1' THEN COALESCE(GS.QTY_COL_EXP, 0) ELSE COALESCE(QTY_COL, 0) END AS CARTONS,
    CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN 'CANCEL' ELSE ' ' END AS TK05_CANCEL_FLAG,
    CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN NULL ELSE COALESCE(MOTHER.SHDTKP, CHILD.SHDTKP) END AS TK05_CANCEL_DATE,
    COALESCE(MOTHER.SHDPPA, CHILD.SHDPPA) AS PLANNED_PACKING_DATE,
    COALESCE(MOTHER.SHDLPA, CHILD.SHDLPA) AS LATEST_PLANNED_PACKING_DATE,
    COALESCE(MOTHER.SHDIPU, CHILD.SHDIPU) AS INITIAL_PICKUP_DATE,
    COALESCE(MOTHER.SHDPUP, CHILD.SHDPUP) AS PICKUP_DATE,
    PE.PECMOP AS FLOW,
    CASE PE.PECMOP
        WHEN 'C1'  THEN 'CA' WHEN 'EDO' THEN 'Export Doc (GB Malpensa)' WHEN 'ESD' THEN 'Export Doc & Stop&Go'
        WHEN 'EXP' THEN 'Export Doc (Internal)' WHEN 'FCA' THEN 'FCA/EXW' WHEN 'FES' THEN 'EXW - Export Doc & Stop'
        WHEN 'FEX' THEN 'EXW - Export Doc' WHEN 'FOG' THEN 'FCA + OK to Ship' WHEN 'FOS' THEN 'FCA + OK to Ship & Stop&G'
        WHEN 'FSG' THEN 'FCA + Stop&Go' WHEN 'HAL' THEN 'Hallmarking' WHEN 'MTM' THEN 'Make to Order, Make to Measure'
        WHEN 'VAN' THEN 'Vanilla' WHEN 'VIN' THEN 'Invoice Required' WHEN 'VOK' THEN 'OK to Ship'
        WHEN 'VOS' THEN 'Stop & GO & OK to Ship' WHEN 'VSI' THEN 'Invoice Required & Stop' WHEN 'VST' THEN 'Vanilla Stop & GO'
        ELSE NULL 
    END AS FLOW_DESCRIPTION,
    COALESCE(MOTHER.SHTHZM, CHILD.SHTHZM) AS FLAG_HAZMAT,
    COALESCE(MOTHER.SHTFSC, CHILD.SHTFSC) AS FLAG_FSC,
    COALESCE(MOTHER.SHTJEW, CHILD.SHTJEW) AS FLAG_JEWELLERY,
    FLAG_PACKAGING_JEWELRY_SUB AS FLAG_PACKAGING_JEWELLERY,
    COALESCE(MOTHER.SHTHMK, CHILD.SHTHMK) AS FLAG_HALMARKING,
    COALESCE(MOTHER.SHSHMK, CHILD.SHSHMK) AS HALMARKING_STATUS,
    COALESCE(MOTHER.SHTCIT, CHILD.SHTCIT) AS FLAG_IMPACT_CITES,
    COALESCE(MOTHER.SHSCIT, CHILD.SHSCIT) AS CITES_STATUS,
    CASE WHEN VAS.VAS_CODE IS NULL THEN '0' ELSE '1' END AS VAS_FLAG,
    VAS.VAS_CODE AS VAS_CODE,
    VAS.VAS_CLUSTER AS VAS_CLUSTER,
    MOTHER.SHMOTR AS SAP_MEAN_OF_TRANSPORT,
    CG.CGCTMT AS REFLEX_MEAN_OF_TRANSPORT,
    COALESCE(MOTHER.SHCLUS, CHILD.SHCLUS) AS "CLUSTER",
    COALESCE(MOTHER.SHCHAN, CHILD.SHCHAN) AS CHANNEL,
    CASE COALESCE(MOTHER.SHTCEE, CHILD.SHTCEE) WHEN '1' THEN 'CEE' ELSE 'EXTRA' END AS FLAG_CEE,
    COALESCE(MOTHER.SHTTSP, CHILD.SHTTSP) AS FLAG_IS_TO_SHIP,
    COALESCE(MOTHER.SHTSTP, CHILD.SHTSTP) AS FLAG_IS_STOP,
    CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN '1' ELSE '0' END AS FLAG_IS_CANCELLED,
    COALESCE(MOTHER.SHTMAA, CHILD.SHTMAA) AS FLAG_MAX_ATTENTION,
    COALESCE(MOTHER.SHNPRI, CHILD.SHNPRI) AS PRIORITY,
    COALESCE(MOTHER.SHDOCT, CHILD.SHDOCT) AS DOCUMENT_TYPE,
    COALESCE(MOTHER.SHFLOT, CHILD.SHFLOT) AS FLOW_TYPE,
    COALESCE(MOTHER.SHLROU, CHILD.SHLROU) AS ROUTE,
    COALESCE(MOTHER.SHLSHC, CHILD.SHLSHC) AS SHIPPING_CONDITION,
    COALESCE(MOTHER.SHCDEG, CHILD.SHCDEG) AS CODE_DELIVERY_GROUP,
    COALESCE(CHILD.SHLDEB, MOTHER.SHLDEB) AS DELIVERY_BLOCK,
    COALESCE(CHILD.SHLSHB, MOTHER.SHLSHB) AS SHIPMENT_BLOCKED,
    COALESCE(MOTHER.SHTREO, CHILD.SHTREO) AS FLAG_IS_RELEASE_OD,
    COALESCE(CHILD.SHREXT, MOTHER.SHREXT) AS EXTERNAL_ID,
    COALESCE(CHILD.SHREX5, MOTHER.SHREX5) AS ORDER_ID_SENT_IN_TK05,
    COALESCE(CHILD.SHTURG, MOTHER.SHTURG) AS FLAG_URGENT,
    COALESCE(CHILD.SHTCUT, MOTHER.SHTCUT) AS FLAG_CUT_OFF,
    COALESCE(CHILD.SHTDMM, MOTHER.SHTDMM) AS FLAG_DMM_RECALCULATION,
    COALESCE(MOTHER.SHDCPU, CHILD.SHDCPU) AS DMM_PICKUP,
    COALESCE(MOTHER.SHDCPA, CHILD.SHDCPA) AS DMM_PACKING,
    PE."Commenti" AS "COMMENTI",
    PE.PETOPD AS FLAG_ORDER_DESACTIVATED,
    COALESCE(MOTHER.SHDCOR, CHILD.SHDCOR) AS CREATED_DATE,
    GREATEST(
        COALESCE(OE.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(PREP_LINES.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(MOTHER.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(CHILD.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(CG.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(U9.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(U6.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(HU.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(GS.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01'))
    ) AS UPDATED_DATE,
    '0' as ISDELETED,
    PREP_LINES.PRODCAT AS PRODUCT_CATEGORY
FROM MODELS.KERING_GLOBE.HLODPEP OE
INNER JOIN (
    SELECT
        P1.PECDOD, P1.P1CACT, P1.P1NANO, P1.P1NODP, P1.P1CDPO, P1.P1NANP, P1.P1NPRE,
        MAX(P1.P1CPRP || P1.P1CQAL) AS GRADE,
        SUM(P1.P1QODP) AS QTY_ORDERED,
        MIN(CASE WHEN P1.P1JOCA > 0 THEN (LPAD(P1.P1SSCA, 2, '0') || LPAD(P1.P1ANCA, 2, '0') || '-' || LPAD(P1.P1MOCA, 2, '0') || '-' || LPAD(P1.P1JOCA, 2, '0') || ' ' || SUBSTR(lpad(COALESCE(LC.LCHDCA, 0), 6, '0'), 1, 2) || ':' || SUBSTR(lpad(COALESCE(LC.LCHDCA, 0), 6, '0'), 3, 2) || ' ' || P1.P1CDLA) END) AS WAVE,
        MAX(CA.CAPRCA) AS PRODCAT,
        MAX(CASE WHEN P1.P1CART LIKE '7%' THEN 1 ELSE 0 END) AS FLAG_PACKAGING_JEWELRY_SUB,
        MAX(P1.HVR_CHANGE_TIME) AS HVR_CHANGE_TIME
    FROM MODELS.KERING_GLOBE.HLPRPLP P1
    INNER JOIN MODELS.KERING_GLOBE.KBCARTP CA ON CA.CACACT = P1.P1CACT AND P1.P1CART = CA.CASKUC AND CA.DET_IS_DELETED = FALSE
    LEFT JOIN MODELS.KERING_GLOBE.HLLANCP LC ON LC.LCCDPO = P1.P1CDPO AND LC.LCSSCA = P1.P1SSCA AND LC.LCANCA = P1.P1ANCA AND LC.LCMOCA = P1.P1MOCA AND LC.LCJOCA = P1.P1JOCA AND LC.LCCDLA = P1.P1CDLA AND LC.DET_IS_DELETED = FALSE
    WHERE P1.P1CACT = '100' AND P1.P1CDPO = '001' AND P1.DET_IS_DELETED = FALSE
    GROUP BY P1.PECDOD, P1.P1CACT, P1.P1NANO, P1.P1NODP, P1.P1CDPO, P1.P1NANP, P1.P1NPRE
) PREP_LINES ON PREP_LINES.PECDOD = OE.OECDPO AND PREP_LINES.P1CACT = OE.OECACT AND PREP_LINES.P1NANO = OE.OENANN AND PREP_LINES.P1NODP = OE.OENODP
INNER JOIN (
    SELECT PE.*, CO."Commenti"
    FROM MODELS.KERING_GLOBE.HLPRENP PE
    LEFT JOIN (SELECT CONCOM, LISTAGG(COTXTC, ' | ') WITHIN GROUP (ORDER BY CONLCO) AS "Commenti" FROM MODELS.KERING_GLOBE.HLCOMMP GROUP BY CONCOM) CO ON PE.PENCOM = CO.CONCOM
    WHERE PE.PECACT = '100' AND PE.PECDPO = '001' AND PE.DET_IS_DELETED = FALSE
) PE ON PREP_LINES.P1CDPO = PE.PECDPO AND PREP_LINES.P1CACT = PE.PECACT AND PE.PENANN = PREP_LINES.P1NANP AND PE.PENPRE = PREP_LINES.P1NPRE
LEFT JOIN MODELS.KERING_GLOBE.KBSHIPP MOTHER ON MOTHER.SHCDEP = OE.OECDPO AND MOTHER.SHCACT = OE.OECACT AND MOTHER.SHCDOR = OE.OECDDO AND MOTHER.SHRDOR = OE.OERODP AND MOTHER.SHNANN = 0 AND MOTHER.DET_IS_DELETED = FALSE
LEFT JOIN MODELS.KERING_GLOBE.KBSHIPP CHILD ON CHILD.SHCDEP = PE.PECDPO AND CHILD.SHCACT = PE.PECACT AND CHILD.SHNANN = PE.PENANN AND CHILD.SHNPRP = PE.PENPRE AND CHILD.DET_IS_DELETED = FALSE
LEFT JOIN MODELS.KERING_GLOBE.HLCHARP CG ON CG.CGCDPO = PE.PECDPO AND PE.PESSCA = CG.CGSSCA AND PE.PEANCA = CG.CGANCA AND PE.PEMOCA = CG.CGMOCA AND PE.PEJOCA = CG.CGJOCA AND PE.PECCHA = CG.CGCCHA AND CG.DET_IS_DELETED = FALSE
LEFT JOIN MODELS.KERING_GLOBE.HLRDVCP U9 ON U9.U9CDPO = CG.CGCDPO AND U9.U9SSCA = CG.CGSSCA AND U9.U9ANCA = CG.CGANCA AND U9.U9MOCA = CG.CGMOCA AND U9.U9JOCA = CG.CGJOCA AND U9.U9CCHA = CG.CGCCHA AND U9.DET_IS_DELETED = FALSE
LEFT JOIN MODELS.KERING_GLOBE.HLRDVTP U6 ON U9.U9CDPO = U6.U6CDPO AND U9.U9NARV = U6.U6NARV AND U9.U9NRDV = U6.U6NRDV AND U6.DET_IS_DELETED = FALSE
LEFT JOIN MODELS.KERING_GLOBE.HLTRSPP TP ON CG.CGCTRP = TP.TPCTRP AND TP.DET_IS_DELETED = FALSE
LEFT JOIN (
    SELECT HUCDPO, HUDNUM, HUPORD, MAX(HUDMAJ)::TIMESTAMP_NTZ(6) AS TK35HEURE, MAX(HVR_CHANGE_TIME) AS HVR_CHANGE_TIME
    FROM MODELS.KERING_GLOBE.KB35HUP
    WHERE HUCDPO = '001' AND DET_IS_DELETED = FALSE
    GROUP BY HUCDPO, HUDNUM, HUPORD
) HU ON PE.PECDPO = HU.HUCDPO AND PE.PERODP = HU.HUDNUM AND HU.HUPORD = LPAD(PE.PENANN::STRING, 2, '0') || LPAD(PE.PENPRE::STRING, 9, '0')
LEFT JOIN (
    SELECT P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE,
           SUM(LG.LGQLPG) AS QTY_PACK,
           COUNT(DISTINCT GE.GENCOL) AS QTY_COL,
           COUNT(DISTINCT CASE WHEN SU.SUTSCG = '1' THEN GE.GENCOL ELSE NULL END) AS QTY_COL_LOAD,
           SUM(CASE WHEN SU.SUTSCG = '1' THEN LG.LGQLPG ELSE 0 END) AS QTY_PIE_LOAD
    FROM MODELS.KERING_GLOBE.HLPRPLP P1
    INNER JOIN MODELS.KERING_GLOBE.HLLPRGP LG ON LG.LGCDPO = P1.P1CDPO AND LG.LGCACT = P1.P1CACT AND LG.LGNANN = P1.P1NANN AND LG.LGNLPR = P1.P1NLPR AND LG.DET_IS_DELETED = FALSE
    INNER JOIN MODELS.KERING_GLOBE.HLGEINP GE ON GE.GENGEI = LG.LGNGEI AND LG.LGCDPO = GE.GECDPO AND LG.LGCACT = GE.GECACT AND GE.GENCOL <> ' ' AND GE.DET_IS_DELETED = FALSE
    INNER JOIN MODELS.KERING_GLOBE.HLSUPPP SU ON SU.SUCDPO = LG.LGCDPO AND SU.SUNSUP = GE.GENSUP AND SU.DET_IS_DELETED = FALSE
    INNER JOIN MODELS.KERING_GLOBE.HLEMPLP EM ON SU.SUCDPO = EM.EMCDPO AND SU.SUNEMP = EM.EMNEMP AND EM.DET_IS_DELETED = FALSE
    WHERE P1.DET_IS_DELETED = FALSE
    GROUP BY P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE
) PREP_LINES_QTY ON PREP_LINES_QTY.P1CDPO = PE.PECDPO AND PREP_LINES_QTY.P1CACT = PE.PECACT AND PREP_LINES_QTY.P1NANP = PE.PENANN AND PREP_LINES_QTY.P1NPRE = PE.PENPRE
LEFT JOIN (
    SELECT P1CACT, P1CDPO, P1NANP, P1NPRE, SUM(P1QODP) as QTY_DMS
    FROM MODELS.KERING_GLOBE.HLPRPLP
    INNER JOIN MODELS.KERING_GLOBE.HLARVLP ON P1CACT = VLCACT AND P1CART = VLCART AND VLCVLA = '03'
    WHERE VLCFPR IN ('DMS') AND DET_IS_DELETED = FALSE
    GROUP BY P1CACT, P1CDPO, P1NANP, P1NPRE
) DMS_SUB ON DMS_SUB.P1CDPO = PE.PECDPO AND DMS_SUB.P1CACT = PE.PECACT AND DMS_SUB.P1NANP = PE.PENANN AND DMS_SUB.P1NPRE = PE.PENPRE
LEFT JOIN (
    SELECT GS.GSCDPO, GS.GSCACT, GS.GSNAPP, GS.GSNPRE, COUNT(DISTINCT GS.GSNCOL) AS QTY_COL_EXP, SUM(GS.GSQGEI) AS QTY_PIE_EXP, MAX(GS.HVR_CHANGE_TIME) AS HVR_CHANGE_TIME
    FROM MODELS.KERING_GLOBE.HLPRPLP P1
    INNER JOIN MODELS.KERING_GLOBE.HLGESOP GS ON GS.GSCACT = P1.P1CACT AND GS.GSCDPO = P1.P1CDPO AND GS.GSNALI = P1.P1NANN AND GS.GSNLPR = P1.P1NLPR AND GS.DET_IS_DELETED = FALSE
    WHERE P1.P1CACT = '100' AND P1.P1CDPO = '001' AND P1.DET_IS_DELETED = FALSE
    GROUP BY GS.GSCDPO, GS.GSCACT, GS.GSNAPP, GS.GSNPRE
) GS ON GS.GSCDPO = PE.PECDPO AND GS.GSCACT = PE.PECACT AND GS.GSNAPP = PE.PENANN AND GS.GSNPRE = PE.PENPRE
LEFT JOIN FACT_KER_02_OUTBOUND_VAS VAS ON PE.PECDPO = VAS.P1CDPO AND PE.PECACT = VAS.P1CACT AND PE.PENANN = VAS.P1NANP AND PE.PENPRE = VAS.P1NPRE
LEFT JOIN (
    SELECT CO.CORCDE FROM MODELS.KERING_GLOBE.KBDORDP OR_
    INNER JOIN MODELS.KERING_GLOBE.KBMCLPP CO ON CO.COCDPO = OR_.ORCDPO AND CO.COCACT = OR_.ORCACT AND CO.COSTSE = OR_.ORORID AND CO.DET_IS_DELETED = FALSE
    WHERE OR_.ORCDPO = '001' AND OR_.ORCACT = '100' AND OR_.DET_IS_DELETED = FALSE
    GROUP BY CO.CORCDE
) CO ON CO.CORCDE = PE.PERODP
LEFT JOIN (
    SELECT SUBSTR(SG.SGSRID, 1, 6) AS CGCOD, SUBSTR(SG.SGSRID, 7, 2) AS CGSIE, SUBSTR(SG.SGSRID, 9, 2) AS CGANN, SUBSTR(SG.SGSRID, 11, 2) AS CGMOI, SUBSTR(SG.SGSRID, 13, 2) AS CGJOU
    FROM MODELS.KERING_GLOBE.KBDSSLP SG
    WHERE SG.SGCDPO = '001' AND SG.SGCACT = '100' AND SUBSTR(SG.SGSRID, 9, 1) <> '_' AND SG.DET_IS_DELETED = FALSE
    GROUP BY SUBSTR(SG.SGSRID, 1, 6), SUBSTR(SG.SGSRID, 7, 2), SUBSTR(SG.SGSRID, 9, 2), SUBSTR(SG.SGSRID, 11, 2), SUBSTR(SG.SGSRID, 13, 2)
) SG1 ON SG1.CGCOD = PE.PECCHA AND SG1.CGSIE = PE.PESSCA AND SG1.CGANN = PE.PEANCA AND SG1.CGMOI = PE.PEMOCA AND SG1.CGJOU = PE.PEJOCA
LEFT JOIN (
    SELECT SUBSTR(SG.SGSRID, 10, 6) AS CGCOD, SUBSTR(SG.SGSRID, 1, 2) AS CGSIE, SUBSTR(SG.SGSRID, 3, 2) AS CGANN, SUBSTR(SG.SGSRID, 5, 2) AS CGMOI, SUBSTR(SG.SGSRID, 7, 2) AS CGJOU
    FROM MODELS.KERING_GLOBE.KBDSSLP SG
    WHERE SG.SGCDPO = '001' AND SG.SGCACT = '100' AND SUBSTR(SG.SGSRID, 9, 1) = '_' AND SG.DET_IS_DELETED = FALSE
    GROUP BY SUBSTR(SG.SGSRID, 10, 6), SUBSTR(SG.SGSRID, 1, 2), SUBSTR(SG.SGSRID, 3, 2), SUBSTR(SG.SGSRID, 5, 2), SUBSTR(SG.SGSRID, 7, 2)
) SG2 ON SG2.CGCOD = PE.PECCHA AND SG2.CGSIE = PE.PESSCA AND SG2.CGANN = PE.PEANCA AND SG2.CGMOI = PE.PEMOCA AND SG2.CGJOU = PE.PEJOCA
LEFT JOIN (
    SELECT 
        TD.TDTREFB,
        MAX(YMA.MO_ARRIVAL_DATE) AS MO_ARRIVAL_DATE,
        MAX(YMB.MO_BAY_DATE) AS MO_BAY_DATE,
        MAX(YMD.MO_DEPARTURE_DATE) AS MO_DEPARTURE_DATE
    FROM MODELS.KERING_GLOBE.TIEADRSLOTTASK TD
    LEFT JOIN (
        SELECT YM1.MOAPPOINTMENT, MIN(MOARRIVALDATE) AS MO_ARRIVAL_DATE, TS.TSLID
        FROM MODELS.KERING_GLOBE.HISTORYMOVEMENT YM1 
        INNER JOIN MODELS.KERING_GLOBE.TIEADRSLOT TS ON TS.DET_IS_DELETED = FALSE AND YM1.MOAPPOINTMENT = TS.TSLNUM
        WHERE YM1.IDSITE = '1' AND YM1.IDDEPOT = '4' AND YM1.MOSTATE = 20
        GROUP BY YM1.MOAPPOINTMENT, TS.TSLID
    ) YMA ON YMA.TSLID = TD.TDTTSLID
    LEFT JOIN (
        SELECT YM2.MOAPPOINTMENT, MIN(YM2.HYTIMESTAMP) AS MO_BAY_DATE, TS.TSLID
        FROM MODELS.KERING_GLOBE.HISTORYMOVEMENT YM2 
        INNER JOIN MODELS.KERING_GLOBE.DOCK D ON D.IDDOCK = YM2.IDDOCK
        INNER JOIN MODELS.KERING_GLOBE.TIEADRSLOT TS ON TS.DET_IS_DELETED = FALSE AND YM2.MOAPPOINTMENT = TS.TSLNUM
        WHERE YM2.IDSITE = '1' AND YM2.IDDEPOT = '4' AND YM2.MOSTATE = 60 AND YM2.IDSTATUS = 3
        GROUP BY YM2.MOAPPOINTMENT, TS.TSLID
    ) YMB ON YMB.TSLID = TD.TDTTSLID
    LEFT JOIN (
        SELECT YM3.MOAPPOINTMENT, MIN(YM3.MODEPARTUREDATE) AS MO_DEPARTURE_DATE, TS.TSLID
        FROM MODELS.KERING_GLOBE.HISTORYMOVEMENT YM3 
        INNER JOIN MODELS.KERING_GLOBE.TIEADRSLOT TS ON TS.DET_IS_DELETED = FALSE AND YM3.MOAPPOINTMENT = TS.TSLNUM
        WHERE YM3.IDSITE = '1' AND YM3.IDDEPOT = '4' AND YM3.MOSTATE = 99
        GROUP BY YM3.MOAPPOINTMENT, TS.TSLID
    ) YMD ON YMD.TSLID = TD.TDTTSLID 
    WHERE TD.DET_IS_DELETED = FALSE
    GROUP BY TD.TDTREFB
) YMX ON YMX.TDTREFB = U6.U6LRDV
WHERE OE.OECDPO = '001'
  AND OE.OECACT = '100'
  AND OE.DET_IS_DELETED = FALSE
  AND GREATEST(
        COALESCE(OE.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(PREP_LINES.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(MOTHER.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(CHILD.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(CG.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(U9.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(U6.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')), COALESCE(HU.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01')),
        COALESCE(GS.HVR_CHANGE_TIME, TO_TIMESTAMP('1900-01-01'))
      ) >= (SELECT (DATEADD(hour, -4, or2.LAST_UPDATE))::DATE FROM OBJECT_RUN or2 WHERE "OBJECT" = '02_OUTBOUND');