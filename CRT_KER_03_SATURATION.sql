CREATE OR REPLACE FORCE EDITIONABLE VIEW "SMART_BI"."CRT_KER_03_SATURATION" ("ENVIRONMENT", "ORDER_ID", "SEQUENCE_NUMBER", "UDM", "SKU", "QUALITY", "SKU_VOLUME", "SKU_WEIGHT", "QUANTITY", "SKU_TYPE", "PRODUCT_CATEGORY", "PRODUCT_SUBCATEGORY", "FLAG_HAZMAT_SKU", "FLAG_FSC_SKU", "FLAG_JEWELLERY_SKU", "FLAG_PACKAGING_JEWELLERY_SKU", "FLAG_HALMARKING_SKU", "FLAG_CITES_SKU", "FLAG_CEE_SKU", "PARCEL_TYPE_FORECAST", "PARCEL_TYPE_ORDERINSUPDATE", "PARCEL_TYPE_ACTUAL", "INTERNAL_HEIGHT_PARCEL_FORECAST", "INTERNAL_WIDTH_PARCEL_FORECAST", "INTERNAL_LENGTH_PARCEL_FORECAST", "INTERNAL_VOLUME_PARCEL_FORECAST", "EXTERNAL_HEIGHT_PARCEL_FORECAST", "EXTERNAL_WIDTH_PARCEL_FORECAST", "EXTERNAL_LENGTH_PARCEL_FORECAST", "EXTERNAL_VOLUME_PARCEL_FORECAST", "INTERNAL_HEIGHT_PARCEL_ACTUAL", "INTERNAL_WIDTH_PARCEL_ACTUAL", "INTERNAL_LENGTH_PARCEL_ACTUAL", "INTERNAL_VOLUME_PARCEL_ACTUAL", "EXTERNAL_HEIGHT_PARCEL_ACTUAL", "EXTERNAL_WIDTH_PARCEL_ACTUAL", "EXTERNAL_LENGTH_PARCEL_ACTUAL", "EXTERNAL_VOLUME_PARCEL_ACTUAL", "PIECES_WEIGHT", "EMPTY_PARCEL_WEIGHT", "PARCEL_WEIGHT", "INTEGRATION_DATE", "TK05_PACKED_DATE", "BUILDING_NAME", "PACKING_STATION_ID", "PACKING_USER", "CUSTOMER_CODE", "COUNTRY", "FLOW", "CHANNEL", "BRAND", "UPDATED_DATE", "UPDATED_DATE_ORACLE", "ISDELETED", "REFLEX_ORDER", "REFLEX_PREPERATION", "CARTON_LINE_SEQUENCE") AS 
  SELECT DISTINCT
--Hash key generation moved to procedure
--INC4422662 - code provided by Piero Serale & team, to correct multiple issues
--Modified 2024-09-03 to avoid duplication in PRECUBING-PARCELS subquery - added HOSTSE=CDSTSE condition to join
--added UPDATED_DATE_ORACLE_SUB to drive updates based on GGS timestamps
'Reflex WEB B' 											AS "ENVIRONMENT" ,
ORDER_SUB												AS "ORDER_ID",
SEQUENCE_SUB											AS "SEQUENCE_NUMBER",
PARCEL_SUB 												AS "UDM",
ITEM_SUB 												AS "SKU",
QUALITY_SUB												AS "QUALITY",
SUM(PCS_VOLUME_SUB)										AS "SKU_VOLUME",
SUM(PCS_WEIGHT_SUB)										AS "SKU_WEIGHT",
SUM(QUANTITY_SUB)										AS "QUANTITY", 
MODEL_SUB												AS "SKU_TYPE",
PRODUCT_CATEGORY_SUB									AS "PRODUCT_CATEGORY",
SUBCAT_SUB		 										AS "PRODUCT_SUBCATEGORY",
HAZ_FUB 												AS "FLAG_HAZMAT_SKU",
FSC_SUB 												AS "FLAG_FSC_SKU",
JWL_SUB 												AS "FLAG_JEWELLERY_SKU",
JWL_PACK_SUB											AS "FLAG_PACKAGING_JEWELLERY_SKU",
HAL_SUB 												AS "FLAG_HALMARKING_SKU",
CITES_SUB 												AS "FLAG_CITES_SKU",
CEE_SUB  												AS "FLAG_CEE_SKU",		
PARCEL_TYPE_FOR_SUB 									AS "PARCEL_TYPE_FORECAST",
OIU_PARCEL_SUB 											AS "PARCEL_TYPE_ORDERINSUPDATE",
PARCEL_TYPE_ACT_SUB										AS "PARCEL_TYPE_ACTUAL",
IPFH_SUB												AS "INTERNAL_HEIGHT_PARCEL_FORECAST",
IPFW_SUB 												AS "INTERNAL_WIDTH_PARCEL_FORECAST",
IPFL_SUB 												AS "INTERNAL_LENGTH_PARCEL_FORECAST",
IPFV_SUB 									    		AS "INTERNAL_VOLUME_PARCEL_FORECAST",
EPFH_SUB 												AS "EXTERNAL_HEIGHT_PARCEL_FORECAST",
EPFW_SUB 												AS "EXTERNAL_WIDTH_PARCEL_FORECAST",
EPFL_SUB 												AS "EXTERNAL_LENGTH_PARCEL_FORECAST",
EPFV_SUB 												AS "EXTERNAL_VOLUME_PARCEL_FORECAST",
IPAH_SUB	 											AS "INTERNAL_HEIGHT_PARCEL_ACTUAL",
IPAW_SUB 												AS "INTERNAL_WIDTH_PARCEL_ACTUAL",
IPAL_SUB 												AS "INTERNAL_LENGTH_PARCEL_ACTUAL",
IPAV_SUB        										AS "INTERNAL_VOLUME_PARCEL_ACTUAL",
EPAH_SUB 												AS "EXTERNAL_HEIGHT_PARCEL_ACTUAL",
EPAW_SUB 												AS "EXTERNAL_WIDTH_PARCEL_ACTUAL",
EPAL_SUB 												AS "EXTERNAL_LENGTH_PARCEL_ACTUAL",
EPAV_SUB 												AS "EXTERNAL_VOLUME_PARCEL_ACTUAL",
MAX(PCS_TOTAL_WEIGHT) 									AS "PIECES_WEIGHT",
EMPTY_PAR_WEIGHT_SUB									AS "EMPTY_PARCEL_WEIGHT",
MAX(PARCEL_WEIGHT_SUB) 									AS "PARCEL_WEIGHT",
INT_DATE_SUB || ' ' || INT_TIME_SUB						AS "INTEGRATION_DATE",
DATE_TK5                                                AS "TK05_PACKED_DATE",
'B'														AS 	"BUILDING_NAME",	
COALESCE(PACKING_SUB, ' ')								AS "PACKING_STATION_ID",
COALESCE(USER_SUB, ' ')									AS "PACKING_USER",
CUSTOMER_CODE_SUB 										AS "CUSTOMER_CODE",
COUNTRY_SUB												AS "COUNTRY",
FLOW_SUB 												AS "FLOW",
CHANNEL_SUB 											AS "CHANNEL",
BRAND_SUB 												AS "BRAND",
UPDATED_DATE_SUB										AS "UPDATED_DATE",
UPDATED_DATE_ORACLE_SUB                                 AS "UPDATED_DATE_ORACLE",  
'0'														AS "ISDELETED",
LPAD(GSNAOD,2,0)||'/'||LPAD(GSNODP,9,0)					AS "REFLEX_ORDER",
Lpad(GSNAPP,2,0)||'/'||LPAD(GSNPRE,9,0) 				AS "REFLEX_PREPERATION",
CARTON_LINE_SUB											AS "CARTON_LINE_SEQUENCE"
from	(
		SELECT 
			TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY') AS DATE_PACK,
			TO_CHAR(CHILD.SHDPUP, 'DD/MM/YYYY') AS DATE_PICK_PICKUP,
			LPAD(PE.PEJOCA, 2, '0') || '/' || LPAD(PE.PEMOCA, 2, '0') || '/' || PE.PESSCA || PE.PEANCA AS DATE_LOAD,
			TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY HH24:MI') AS DATE_TK5,
			CHILD.SHRDOR AS ORDER_SUB,
			OL.OLLROP AS CARTON_LINE_SUB,
			CD.CDSTSE AS SEQUENCE_SUB, 
			O9.O9NCOL AS PARCEL_SUB,
			CA.CABRDC AS BRAND_SUB,
			CA.CASKUC AS ITEM_SUB, 
			GSQGEI AS QUANTITY_SUB, 
			CA.CASTNO AS MODEL_SUB,
			CA.CAPRCA AS PRODUCT_CATEGORY_SUB,
			O9.O9CTCO AS PARCEL_TYPE_ACT_SUB,
			PRECUBING_PARCELS.FORECAST_PARCEL_TYPE AS PARCEL_TYPE_FOR_SUB,
			NVL(ORPKID,'N/A') AS OIU_PARCEL_SUB,
			PARCEL_ACTUALS.O1MVUT / 1000 AS PARCEL_VOLUME_ACT_SUB,
			(SELECT O1.O1MVUT / 1000 FROM GG_KERI_PRD.HLTYCPP O1 WHERE O1.O1CTCO = PRECUBING_PARCELS.FORECAST_PARCEL_TYPE) AS PARCEL_VOLUME_FOR_SUB,
			GS.GSQGEI * CA.CAPHGH * CA.CAPWID * CA.CAPDPT / 1000 AS PCS_VOLUME_SUB,
			O9.O9MPCP AS PARCEL_WEIGHT_SUB,
			GS.GSPNGE AS PCS_WEIGHT_SUB,
			O9.O9MPCO AS PCS_TOTAL_WEIGHT,
			PRHSID_SUB AS PACKING_SUB,
			PRUAEN_SUB AS USER_SUB,
			P1.P1CQAL AS QUALITY_SUB,
			CA.CASCLA AS SUBCAT_SUB,
			CHILD.SHTHZM AS HAZ_FUB,
			CHILD.SHTFSC AS FSC_SUB,
			CHILD.SHTJEW AS JWL_SUB,
			CHILD.SHTPKJ AS JWL_PACK_SUB,
			CHILD.SHTHMK AS HAL_SUB,
			CHILD.SHTCIT AS CITES_SUB,
			CASE WHEN CHILD.SHTCEE = '1' THEN 'CEE' ELSE 'Extra' END AS CEE_SUB,
			FORECAST_INT_H AS IPFH_SUB,
			FORECAST_INT_W AS IPFW_SUB,
			FORECAST_INT_L AS IPFL_SUB,
			FORECAST_INT_V AS IPFV_SUB,
			FORECAST_EXT_H AS EPFH_SUB,
			FORECAST_EXT_W AS EPFW_SUB,
			FORECAST_EXT_L AS EPFL_SUB,
			FORECAST_EXT_V AS EPFV_SUB,
			PARCEL_ACTUALS.O1MHUT AS IPAH_SUB,
			PARCEL_ACTUALS.O1MPUT AS IPAW_SUB,
			PARCEL_ACTUALS.O1MLUT AS IPAL_SUB,
			PARCEL_ACTUALS.O1MVUT AS IPAV_SUB,
			PARCEL_ACTUALS.O1MHHT AS EPAH_SUB,
			PARCEL_ACTUALS.O1MPHT AS EPAW_SUB,
			PARCEL_ACTUALS.O1MLHT AS EPAL_SUB,
			PARCEL_ACTUALS.O1MVHT AS EPAV_SUB,
			PARCEL_ACTUALS.O1MPCV AS EMPTY_PAR_WEIGHT_SUB,
			TO_CHAR(CHILD.SHDCOR, 'DD/MM/YYYY') AS INT_DATE_SUB,
			TO_CHAR(CHILD.SHDCOR, 'HH24:MI') AS INT_TIME_SUB,
			PE.PECDES AS CUSTOMER_CODE_SUB,
			CHILD.SHPAYD AS COUNTRY_SUB,
			CHILD.SHFLOW AS FLOW_SUB,
			CHILD.SHCHAN AS CHANNEL_SUB,
			-- FN_CONV_R2CF(O9JMAJ, O9MMAJ, O9AMAJ, 20) AS UPDATED_DATE_SUB,
			CHILD.SHDTKS AS UPDATED_DATE_SUB,
            GREATEST(
                    GS.GGS_CREATED, O9.GGS_CREATED,
                    GS.GGS_UPDATED, O9.GGS_UPDATED,
                    PE.GGS_UPDATED, P1.GGS_UPDATED,
                    CHILD.GGS_UPDATED, CD.GGS_UPDATED
                    )
            AS UPDATED_DATE_ORACLE_SUB,
			GS.GSNAPP, GS.GSNPRE, GS.GSNAOD, GS.GSNODP
		FROM GG_KERI_PRD.HLGESOP GS
		INNER JOIN GG_KERI_PRD.HLCOSOP O9 ON GS.GSCDPO = O9.O9CDPO AND GS.GSNCOL = O9.O9NCOL
		INNER JOIN GG_KERI_PRD.HLTYCOP PARCEL_TYPES_ACTUALS ON O9.O9CTCO = PARCEL_TYPES_ACTUALS.YCCTCO
		INNER JOIN GG_KERI_PRD.HLTYCPP PARCEL_ACTUALS ON O9.O9CTCO = PARCEL_ACTUALS.O1CTCO
		INNER JOIN GG_KERI_PRD.HLPRPLP P1 ON P1.P1CACT = GS.GSCACT AND P1.P1CDPO = GS.GSCDPO AND P1.P1NANN = GS.GSNALI AND P1.P1NLPR = GS.GSNLPR
		INNER JOIN GG_KERI_PRD.HLODPLP OL ON P1.P1CACT = OL.OLCACT AND P1.P1CDPO = OL.OLCDPO AND P1.P1NANO = OL.OLNANN AND P1.P1NODP = OL.OLNODP AND P1.P1NLOP = OL.OLNLOP
		INNER JOIN GG_KERI_PRD.HLPRENP PE ON P1.P1CACT = PE.PECACT AND P1.P1CDPO = PE.PECDPO AND P1.P1NANP = PE.PENANN AND P1.P1NPRE = PE.PENPRE
		INNER JOIN GG_KERI_PRD.KBSHIPP CHILD ON CHILD.SHCACT = P1.P1CACT AND CHILD.SHCDEP = P1.P1CDPO AND CHILD.SHNANN = P1.P1NANN AND CHILD.SHNPRP = P1.P1NPRE
		INNER JOIN GG_KERI_PRD.KBCARTP CA ON P1.P1CACT = CA.CACACT AND P1.P1CART = CA.CASKUC
		INNER JOIN GG_KERI_PRD.KBMCLDP CD ON CD.CDCACT = P1.P1CACT AND CD.CDCDPO = P1.P1CDPO AND CD.CDRCDE = PE.PERODP AND CD.CDRLCD = OL.OLLROP AND CD.CDNCOL = GS.GSNCOL
		LEFT JOIN (
			SELECT HO.HOCDPO, HO.HOCACT, HO.HORCDE, HO.HORLCD, HO.HOSTSE, MAX(HOTCOL) AS FORECAST_PARCEL_TYPE,
				MAX(O1.O1MHUT) AS FORECAST_INT_H, MAX(O1.O1MPUT) AS FORECAST_INT_W, MAX(O1.O1MLUT) AS FORECAST_INT_L, MAX(O1.O1MVUT) AS FORECAST_INT_V,
				MAX(O1.O1MHHT) AS FORECAST_EXT_H, MAX(O1.O1MPHT) AS FORECAST_EXT_W, MAX(O1.O1MLHT) AS FORECAST_EXT_L, MAX(O1.O1MVHT) AS FORECAST_EXT_V
			FROM GG_KERI_PRD.KBMHLPP HO
			INNER JOIN GG_KERI_PRD.HLTYCPP O1 ON O1.O1CTCO = HO.HOTCOL
            WHERE trunc(HO.GGS_DELETED) is null
                AND trunc(O1.GGS_DELETED) is null
			GROUP BY HO.HOCDPO, HO.HOCACT, HO.HORCDE, HO.HORLCD, HO.HOSTSE
		) PRECUBING_PARCELS ON PRECUBING_PARCELS.HOCDPO = CD.CDCDPO AND PRECUBING_PARCELS.HOCACT = CD.CDCACT AND PRECUBING_PARCELS.HORCDE = PE.PERODP AND PRECUBING_PARCELS.HORLCD = CD.CDRLCD AND PRECUBING_PARCELS.HOSTSE = CD.CDSTSE
		LEFT JOIN GG_KERI_PRD.KBDORDP KOR ON KOR.ORCDPO = CD.CDCDPO AND KOR.ORCACT = CD.CDCACT AND KOR.ORORID = CD.CDSTSE and trunc(KOR.GGS_DELETED) is null
		LEFT JOIN (
			SELECT PR.PRCDPO, PR.PRLUID, PR.PRTAEN, TO_CHAR(MIN(PR.PRHSID)) AS PRHSID_SUB, TO_CHAR(MIN(PR.PRUAEN)) AS PRUAEN_SUB
			FROM GG_KERI_PRD.KBDPREP PR
			WHERE PR.PRTAEN = '0'
                AND trunc(PR.GGS_DELETED) is null
			GROUP BY PR.PRCDPO, PR.PRLUID, PR.PRTAEN
		) PACKING_REPORT ON PACKING_REPORT.PRCDPO = GS.GSCDPO AND PACKING_REPORT.PRLUID = GS.GSNCOL
		WHERE 1=1
            AND trunc(GS.GGS_DELETED) is null
            AND trunc(O9.GGS_DELETED) is null
            AND trunc(P1.GGS_DELETED) is null
            AND trunc(OL.GGS_DELETED) is null
            AND trunc(PE.GGS_DELETED) is null
            AND trunc(CHILD.GGS_DELETED) is null
            AND trunc(CA.GGS_DELETED) is null
            AND trunc(CD.GGS_DELETED) is null
            AND GREATEST(GS.GGS_CREATED, O9.GGS_CREATED, GS.GGS_UPDATED, O9.GGS_UPDATED, PE.GGS_UPDATED, P1.GGS_UPDATED, CHILD.GGS_UPDATED, CD.GGS_UPDATED)
--                    between trunc(sysdate)-1 and trunc(sysdate)+1
                   > (SELECT CAST(or2.LAST_UPDATE - interval '4' hour AS DATE) FROM OBJECT_RUN_KERING_B or2 WHERE "OBJECT" = '03_SATURATION')
		)
GROUP BY 
ORDER_SUB	
,SEQUENCE_SUB
,PARCEL_SUB
,ITEM_SUB
,QUALITY_SUB
,QUANTITY_SUB
,MODEL_SUB
,PRODUCT_CATEGORY_SUB
,SUBCAT_SUB
,HAZ_FUB
,FSC_SUB
,JWL_SUB
,JWL_PACK_SUB
,HAL_SUB
,CITES_SUB
,CEE_SUB
,PARCEL_TYPE_FOR_SUB
,OIU_PARCEL_SUB
,PARCEL_TYPE_ACT_SUB
,IPFH_SUB
,IPFW_SUB
,IPFL_SUB
,IPFV_SUB
,EPFH_SUB
,EPFW_SUB
,EPFL_SUB
,EPFV_SUB
,IPAH_SUB
,IPAW_SUB
,IPAL_SUB
,IPAV_SUB
,EPAH_SUB
,EPAW_SUB
,EPAL_SUB
,EPAV_SUB
,EMPTY_PAR_WEIGHT_SUB
,INT_DATE_SUB || ' ' || INT_TIME_SUB
,DATE_TK5
,'B'
,COALESCE(PACKING_SUB, ' ')
,COALESCE(USER_SUB, ' ')
,CUSTOMER_CODE_SUB
,COUNTRY_SUB
,FLOW_SUB
,CHANNEL_SUB
,BRAND_SUB
,UPDATED_DATE_SUB
,UPDATED_DATE_ORACLE_SUB -------
,'0'
,LPAD(GSNAOD,2,0)||'/'||LPAD(GSNODP,9,0)
,Lpad(GSNAPP,2,0)||'/'||LPAD(GSNPRE,9,0)
,CARTON_LINE_SUB;