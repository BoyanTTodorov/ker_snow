CREATE OR REPLACE VIEW "SMART_BI"."CRT_BILLING_VAS" (
    "VERSION", "QUANTITY_PRE", "QUANTITY_FIX", "ACTIVITY_DATE", "PREPARATION_CHILD", 
    "PREPARATION_MOTHER", "SAP_ORDERID", "VAS_CLUSTER", "BRAND", "OWNER", "GRADE"
) AS
WITH PREPLINES AS (
    SELECT P1CDPO, P1CACT, P1NANP, P1NPRE, P1CART, P1CPRP, P1CQAL, SUM(P1QPRE) AS P1QPRE
    FROM MODELS.KERING_GLOBE.HLPRPLP P1
    INNER JOIN MODELS.KERING_GLOBE.KBSHIPP SH ON SH.SHCDEP = P1.P1CDPO AND SH.SHCACT = P1.P1CACT AND SH.SHNANN = P1.P1NANP AND SH.SHNPRP = P1.P1NPRE
    WHERE P1QPRE > 0
        AND SH.SHDTKP >= (SELECT (DATEADD(day, -1, or2.LAST_UPDATE))::DATE FROM OBJECT_RUN or2 WHERE "OBJECT" = 'FACT_BILLING_VAS')
        AND P1.DET_IS_DELETED = FALSE AND SH.DET_IS_DELETED = FALSE
    GROUP BY P1CDPO, P1CACT, P1NANP, P1NPRE, P1CART, P1CPRP, P1CQAL
),
VASCODE AS (
    SELECT 
        P1CDPO, P1CACT, P1NANP, P1NPRE, CLCART, CLRCDE, CLNANP, CLNPRE, 
        SUM(CLQPPP) AS QTY_VAS_LANCIATA, PREPA_TYPE, VAS_CODE, 
        REPLACE(SUBSTR(VTDVAS, INSTR(VTDVAS, '#') + 1), ')') AS VAS_CLUSTER
    FROM (
        SELECT P1CDPO, P1CACT, P1NANP, P1NPRE, CLCART, CLRCDE, CLNANP, CLNPRE, CLQPPP, PREPA_TYPE, TRIM(SUBSTR(VAS_CODE, 1, 7)) AS VAS_CODE
        FROM (
            SELECT P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE, CL.*, CASE WHEN KP_CHILD.KPRODP IS NULL THEN 'MOTHER' ELSE 'CHILD' END AS PREPA_TYPE
            FROM PREPLINES P1
            LEFT JOIN (SELECT KPCDEP, KPCACT, KPRODP, KPNAOR, KPNPOR, KPNACR, KPNPCR FROM MODELS.KERING_GLOBE.KBSPLIP GROUP BY KPCDEP, KPCACT, KPRODP, KPNAOR, KPNPOR, KPNACR, KPNPCR) KP_CHILD
                ON KP_CHILD.KPCDEP = P1.P1CDPO AND KP_CHILD.KPCACT = P1.P1CACT AND KP_CHILD.KPNACR = P1.P1NANP AND KP_CHILD.KPNPCR = P1.P1NPRE
            LEFT JOIN (SELECT KPCDEP, KPCACT, KPRODP, KPNAOR, KPNPOR FROM MODELS.KERING_GLOBE.KBSPLIP GROUP BY KPCDEP, KPCACT, KPRODP, KPNAOR, KPNPOR) KP_MOTHER
                ON KP_MOTHER.KPCDEP = P1.P1CDPO AND KP_MOTHER.KPCACT = P1.P1CACT AND KP_MOTHER.KPNAOR = P1.P1NANP AND KP_MOTHER.KPNPOR = P1.P1NPRE
            LEFT JOIN (
                SELECT CLCDPO, CLCACT, CLRCDE, CLNANP, CLNPRE, CLNLPR, CLCART, SUM(CLQPPP) CLQPPP,
                       CLVA01, CLVA02, CLVA03, CLVA04, CLVA05, CLVA06, CLVA07, CLVA08, CLVA09, CLVA10,
                       CLVA11, CLVA12, CLVA13, CLVA14, CLVA15, CLVA16, CLVA17, CLVA18, CLVA19, CLVA20,
                       CLVA21, CLVA22, CLVA23, CLVA24, CLVA25
                FROM MODELS.KERING_GLOBE.KBMCDLP WHERE CLSLAN <> ' ' and DET_IS_DELETED = FALSE
                GROUP BY CLCDPO, CLCACT, CLRCDE, CLNANP, CLNPRE, CLNLPR, CLCART,
                         CLVA01, CLVA02, CLVA03, CLVA04, CLVA05, CLVA06, CLVA07, CLVA08, CLVA09, CLVA10,
                         CLVA11, CLVA12, CLVA13, CLVA14, CLVA15, CLVA16, CLVA17, CLVA18, CLVA19, CLVA20,
                         CLVA21, CLVA22, CLVA23, CLVA24, CLVA25
            ) CL ON CL.CLCACT = P1.P1CACT AND CL.CLCDPO = P1.P1CDPO AND CL.CLCART = P1.P1CART
                   AND CL.CLRCDE = COALESCE(KP_CHILD.KPRODP, KP_MOTHER.KPRODP)
                   AND CL.CLNANP = COALESCE(KP_CHILD.KPNAOR, KP_MOTHER.KPNAOR)
                   AND CL.CLNPRE = COALESCE(KP_CHILD.KPNPOR, KP_MOTHER.KPNPOR)
        )
        UNPIVOT ( "VAS_CODE" FOR "POSITION" IN (CLVA01, CLVA02, CLVA03, CLVA04, CLVA05, CLVA06, CLVA07, CLVA08, CLVA09, CLVA10, CLVA11, CLVA12, CLVA13, CLVA14, CLVA15, CLVA16, CLVA17, CLVA18, CLVA19, CLVA20, CLVA21, CLVA22, CLVA23, CLVA24, CLVA25))
        WHERE TRIM(SUBSTR("VAS_CODE", 1, 7)) IS NOT NULL
    )
    LEFT JOIN MODELS.KERING_GLOBE.KBTVASP ON VAS_CODE = TRIM(VTCTVA)
    GROUP BY P1CDPO, P1CACT, P1NANP, P1NPRE, CLCART, CLRCDE, CLNANP, CLNPRE, PREPA_TYPE, VAS_CODE, REPLACE(SUBSTR(VTDVAS, INSTR(VTDVAS, '#') + 1), ')')
)
SELECT
    '1.0' AS VERSION,
    SUM(P1.P1QPRE) AS QUANTITY_PRE,
    SUM(CASE WHEN VS.QTY_VAS_LANCIATA > P1.P1QPRE THEN P1.P1QPRE ELSE VS.QTY_VAS_LANCIATA END) AS QUANTITY_FIX,
    TRUNC(SH.SHDTKP) AS ACTIVITY_DATE,
    COALESCE(lpad(P1.P1NANP, 2, 0) || '/' || lpad(P1.P1NPRE, 9, 0), ' ') AS PREPARATION_CHILD,
    COALESCE(lpad(VS.CLNANP, 2, 0) || '/' || lpad(VS.CLNPRE, 9, 0), ' ') AS PREPARATION_MOTHER,
    VS.CLRCDE AS SAP_ORDERID,
    VS.VAS_CLUSTER,
    CASE CA.CABRDC 
        WHEN '12' THEN 'GG' WHEN '13' THEN 'BV' WHEN '18' THEN 'BAL'
        WHEN '14' THEN 'YSL' WHEN '15' THEN 'AMQ' ELSE TO_CHAR(CA.CABRDC) 
    END AS BRAND,
    COALESCE(P1.P1CPRP, ' ') AS OWNER,
    COALESCE(P1.P1CQAL, ' ') AS GRADE
FROM PREPLINES P1
INNER JOIN VASCODE VS ON P1.P1CDPO = VS.P1CDPO AND P1.P1CACT = VS.P1CACT AND P1.P1NANP = VS.P1NANP AND P1.P1NPRE = VS.P1NPRE AND P1.P1CART = VS.CLCART
INNER JOIN MODELS.KERING_GLOBE.KBSHIPP SH ON SH.SHCDEP = P1.P1CDPO AND SH.SHCACT = P1.P1CACT AND SH.SHNANN = P1.P1NANP AND SH.SHNPRP = P1.P1NPRE
INNER JOIN MODELS.KERING_GLOBE.HLPRENP PE ON PE.PECDPO = P1.P1CDPO AND PE.PECACT = P1.P1CACT AND PE.PENANN = P1.P1NANP AND PE.PENPRE = P1.P1NPRE
LEFT JOIN MODELS.KERING_GLOBE.KBCARTP CA ON P1.P1CART = CA.CASKUC and CA.DET_IS_DELETED = FALSE
WHERE SH.DET_IS_DELETED = FALSE
  AND PE.DET_IS_DELETED = FALSE
  AND NOT (PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)) --remove cancelled
  AND SH.SHTTKP = 1 -- tk05 pack exists
  AND SH.SHTHMK <> 1
GROUP BY
    '1.0',
    TRUNC(SH.SHDTKP),
    COALESCE(lpad(P1.P1NANP, 2, 0) || '/' || lpad(P1.P1NPRE, 9, 0), ' '),
    COALESCE(lpad(VS.CLNANP, 2, 0) || '/' || lpad(VS.CLNPRE, 9, 0), ' '),
    VS.CLRCDE,
    VS.VAS_CLUSTER,
    CASE CA.CABRDC 
        WHEN '12' THEN 'GG' WHEN '13' THEN 'BV' WHEN '18' THEN 'BAL'
        WHEN '14' THEN 'YSL' WHEN '15' THEN 'AMQ' ELSE TO_CHAR(CA.CABRDC) 
    END,
    COALESCE(P1.P1CPRP, ' '),
    COALESCE(P1.P1CQAL, ' ');