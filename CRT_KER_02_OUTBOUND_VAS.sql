
  CREATE OR REPLACE FORCE EDITIONABLE VIEW "GG_KERI_PRD"."CRT_BILLING_VAS" ("VERSION", "QUANTITY_PRE", "QUANTITY_FIX", "ACTIVITY_DATE", "PREPARATION_CHILD", "PREPARATION_MOTHER", "SAP_ORDERID", "VAS_CLUSTER", "BRAND", "OWNER", "GRADE") AS 
  WITH PREPLINES AS   (
                    SELECT P1CDPO,P1CACT,P1NANP,P1NPRE,P1CART,P1CPRP,P1CQAL,SUM(P1QPRE) AS P1QPRE
                    FROM GG_KERI_PRD.HLPRPLP P1
                    INNER JOIN KBSHIPP SH ON SH.SHCDEP = P1.P1CDPO AND SH.SHCACT = P1.P1CACT AND SH.SHNANN = P1.P1NANP AND SH.SHNPRP = P1.P1NPRE
                    WHERE P1QPRE > 0
                        AND SH.SHDTKP >= (SELECT CAST(or2.LAST_UPDATE - interval '1' DAY AS DATE) FROM OBJECT_RUN or2 WHERE "OBJECT" = 'FACT_BILLING_VAS')
                        AND trunc(P1.GGS_DELETED) is null and trunc(SH.GGS_DELETED) is null
                    GROUP BY P1CDPO,P1CACT,P1NANP,P1NPRE,P1CART,P1CPRP,P1CQAL
                    )
, VASCODE AS        (
                    SELECT P1CDPO,P1CACT,P1NANP,P1NPRE,CLCART,CLRCDE,CLNANP,CLNPRE,SUM(CLQPPP) AS QTY_VAS_LANCIATA,PREPA_TYPE,VAS_CODE, REPLACE(SUBSTR(VTDVAS, INSTR(VTDVAS, '#') + 1),')') AS VAS_CLUSTER
                    FROM    (--unpivot VAS columns
                            SELECT P1CDPO,P1CACT,P1NANP,P1NPRE,CLCART,CLRCDE,CLNANP,CLNPRE,CLQPPP,PREPA_TYPE,TRIM(SUBSTR(VAS_CODE,1,7)) AS VAS_CODE
                            FROM    (--extract list of not-null vas codes per prep line and CLNLPR. filtered by *actually picked* lines only - correlated with outer query 
                                    SELECT P1.P1CDPO,P1.P1CACT,P1.P1NANP,P1.P1NPRE, CL.*, CASE WHEN KP_CHILD.KPRODP IS NULL THEN 'MOTHER' ELSE 'CHILD' END AS PREPA_TYPE
                                    FROM PREPLINES P1
                                    LEFT  JOIN  (SELECT KPCDEP,KPCACT,KPRODP,KPNAOR,KPNPOR,KPNACR,KPNPCR FROM KBSPLIP@KE_IT_STB_GLOBE GROUP BY KPCDEP,KPCACT,KPRODP,KPNAOR,KPNPOR,KPNACR,KPNPCR) KP_CHILD
                                            ON KP_CHILD.KPCDEP=P1.P1CDPO AND KP_CHILD.KPCACT=P1.P1CACT AND KP_CHILD.KPNACR = P1.P1NANP AND KP_CHILD.KPNPCR = P1.P1NPRE
                                    LEFT  JOIN  (SELECT KPCDEP,KPCACT,KPRODP,KPNAOR,KPNPOR FROM KBSPLIP@KE_IT_STB_GLOBE GROUP BY KPCDEP,KPCACT,KPRODP,KPNAOR,KPNPOR) KP_MOTHER 
                                            ON KP_MOTHER.KPCDEP=P1.P1CDPO AND KP_MOTHER.KPCACT=P1.P1CACT AND KP_MOTHER.KPNAOR = P1.P1NANP AND KP_MOTHER.KPNPOR = P1.P1NPRE
                                    LEFT  JOIN  (SELECT CLCDPO,CLCACT,CLRCDE,CLNANP,CLNPRE,CLNLPR,CLCART,SUM(CLQPPP) CLQPPP
                                                    ,CLVA01,CLVA02,CLVA03,CLVA04,CLVA05,CLVA06,CLVA07,CLVA08,CLVA09,CLVA10,CLVA11,CLVA12,CLVA13,CLVA14,CLVA15,CLVA16,CLVA17,CLVA18,CLVA19,CLVA20,CLVA21,CLVA22,CLVA23,CLVA24,CLVA25
                                                FROM GG_KERI_PRD.KBMCDLP WHERE CLSLAN <> ' ' and trunc(KBMCDLP.ggs_deleted) is null
                                                GROUP BY CLCDPO,CLCACT,CLRCDE,CLNANP,CLNPRE,CLNLPR,CLCART,CLVA01,CLVA02,CLVA03,CLVA04,CLVA05,CLVA06,CLVA07,CLVA08,CLVA09,CLVA10,CLVA11,CLVA12,CLVA13,CLVA14,CLVA15,CLVA16,CLVA17,CLVA18,CLVA19,CLVA20,CLVA21,CLVA22,CLVA23,CLVA24,CLVA25
                                                ) CL ON CL.CLCACT=P1.P1CACT AND CL.CLCDPO=P1.P1CDPO AND CL.CLCART=P1.P1CART
                                                    AND CL.CLRCDE= nvl(KP_CHILD.KPRODP,KP_MOTHER.KPRODP)
                                                    AND CL.CLNANP= nvl(KP_CHILD.KPNAOR,KP_MOTHER.KPNAOR) AND CL.CLNPRE = nvl(KP_CHILD.KPNPOR, KP_MOTHER.KPNPOR)
                                    ) UNPIVOT ( "VAS_CODE" FOR "POSITION" IN (CLVA01,CLVA02,CLVA03,CLVA04,CLVA05,CLVA06,CLVA07,CLVA08,CLVA09,CLVA10,CLVA11,CLVA12,CLVA13,CLVA14,CLVA15,CLVA16,CLVA17,CLVA18,CLVA19,CLVA20,CLVA21,CLVA22,CLVA23,CLVA24,CLVA25))
                            WHERE TRIM(SUBSTR("VAS_CODE",1,7)) IS NOT NULL
                            ) LEFT JOIN  KBTVASP@KE_IT_STB_GLOBE ON VAS_CODE = TRIM(VTCTVA)
                    GROUP BY P1CDPO,P1CACT,P1NANP,P1NPRE,CLCART,CLRCDE,CLNANP,CLNPRE,PREPA_TYPE,VAS_CODE, REPLACE(SUBSTR(VTDVAS, INSTR(VTDVAS, '#') + 1),')')
                    )
SELECT
    '1.0' AS VERSION --when changing, also change GROUP BY 
    ,SUM(P1.P1QPRE) QUANTITY_PRE
    ,SUM(CASE WHEN VS.QTY_VAS_LANCIATA > P1.P1QPRE THEN P1.P1QPRE ELSE VS.QTY_VAS_LANCIATA END) QUANTITY_FIX
    ,trunc(SH.SHDTKP) AS ACTIVITY_DATE
    ,nvl(lpad(P1.P1NANP,2,0) || '/' || lpad(P1.P1NPRE,9,0),' ') AS PREPARATION_CHILD
    ,nvl(lpad(VS.CLNANP,2,0) || '/' || lpad(VS.CLNPRE,9,0),' ') AS PREPARATION_MOTHER
    ,VS.CLRCDE AS SAP_ORDERID
    ,VS.VAS_CLUSTER
    ,CASE   WHEN CA.CABRDC ='12' THEN 'GG'
            WHEN CA.CABRDC ='13' THEN 'BV'
            WHEN CA.CABRDC ='18' THEN 'BAL'
            WHEN CA.CABRDC ='14' THEN 'YSL'
            WHEN CA.CABRDC ='15' THEN 'AMQ' ELSE TO_CHAR(CA.CABRDC) END AS BRAND
    ,nvl(P1.P1CPRP,' ') AS OWNER
    ,nvl(P1.P1CQAL,' ') AS GRADE
FROM PREPLINES P1
INNER JOIN VASCODE VS ON P1.P1CDPO = VS.P1CDPO AND P1.P1CACT = VS.P1CACT AND P1.P1NANP = VS.P1NANP AND P1.P1NPRE = VS.P1NPRE AND P1.P1CART = VS.CLCART
INNER JOIN KBSHIPP SH ON SH.SHCDEP = P1.P1CDPO AND SH.SHCACT = P1.P1CACT AND SH.SHNANN = P1.P1NANP AND SH.SHNPRP = P1.P1NPRE
INNER JOIN HLPRENP PE ON PE.PECDPO = P1.P1CDPO AND PE.PECACT = P1.P1CACT AND PE.PENANN = P1.P1NANP AND PE.PENPRE = P1.P1NPRE
LEFT  JOIN KBCARTP CA ON P1.P1CART = CA.CASKUC and trunc(CA.GGS_DELETED) is null
WHERE 1=1
    and trunc(SH.GGS_DELETED) is null
    and trunc(PE.GGS_DELETED) is null
    AND NOT (PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)) --rimuove i cancel
    AND SH.SHTTKP=1  -- tk05 pack exists
    AND SH.SHTHMK<>1     
GROUP BY
    '1.0'
    ,trunc(SH.SHDTKP)
    ,nvl(lpad(P1.P1NANP,2,0) || '/' || lpad(P1.P1NPRE,9,0),' ')
    ,nvl(lpad(VS.CLNANP,2,0) || '/' || lpad(VS.CLNPRE,9,0),' ')
    ,VS.CLRCDE
    ,VS.VAS_CLUSTER
    ,CASE   WHEN CA.CABRDC ='12' THEN 'GG'
            WHEN CA.CABRDC ='13' THEN 'BV'
            WHEN CA.CABRDC ='18' THEN 'BAL'
            WHEN CA.CABRDC ='14' THEN 'YSL'
            WHEN CA.CABRDC ='15' THEN 'AMQ' ELSE TO_CHAR(CA.CABRDC) END
    ,nvl(P1.P1CPRP,' ')
    ,nvl(P1.P1CQAL,' ')



--  ) GROUP BY P1CDPO,P1CACT,P1NANP,P1NPRE,PREPA_TYPE
;

 