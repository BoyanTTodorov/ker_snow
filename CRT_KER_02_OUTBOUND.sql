CREATE OR REPLACE FORCE EDITIONABLE VIEW "SMART_BI"."CRT_KER_02_OUTBOUND" ("PK_FACT_OUTBOUND", "INTEGRATION_DATE", "INTEGRATION_TIME", "ENVIRONMENT", "BUILDING", "REFLEX_CLIENT", "REFLEX_DESTINATION", "WAVING_DATE", "WAVING_CODE", "ORDER_INSERT_UPDATE", "SHIPPING_REQUEST", "BRAND", "SAP_ORDERID", "CUSTOMER_CODE", "COUNTRY", "SAP_CARRIER", "REFLEX_CARRIER", "CARRIER_NAME", "OWNER", "QUALITY", "PREPARATION_NUMBER", "DELIVERY_DATE", "LOAD_DATE", "LOAD_CODE", "RDV", "PLATE_NUMBER", "TRUCK_DEPARTURE", "TK35_TRANSMISSION", "TK05_PACKED_DATE", "TK05_SHIPPED_DATE", "INVOICE_CODE", "TRUCK_GATE_ARRIVAL", "TRUCK_BAY_ARRIVAL", "EVENT_490", "INVOICE_DATE", "QUANTITY_ORDERED", "QUANTITY_PICKED", "QUANTITY_PACKED", "QUANTITY_DMS", "PARCELS_LOADED", "PIECES_LOADED", "CARTONS", "TK05_CANCEL_FLAG", "TK05_CANCEL_DATE", "INITIAL_PLANNED_PACKING_DATE", "INITIAL_PLANNED_PACKING_TIME", "PLANNED_PACKING_DATE", "PLANNED_PACKING_TIME", "INITIAL_LATEST_PLANNED_PACKING_DATE", "INITIAL_LATEST_PLANNED_PACKING_TIME", "LATEST_PLANNED_PACKING_DATE", "LATEST_PLANNED_PACKING_TIME", "INITIAL_PICKUP_DATE", "INITIAL_PICKUP_TIME", "PICKUP_DATE", "PICKUP_TIME", "FLOW", "FLOW_DESCRIPTION", "FLAG_HAZMAT", "FLAG_FSC", "FLAG_JEWELLERY", "FLAG_PACKAGING_JEWELLERY", "FLAG_HALMARKING", "HALMARKING_STATUS", "FLAG_IMPACT_CITES", "CITES_STATUS", "VAS_FLAG", "VAS_CODE", "VAS_CLUSTER", "SAP_MEAN_OF_TRANSPORT", "REFLEX_MEAN_OF_TRANSPORT", "CLUSTER", "CHANNEL", "FLAG_CEE", "FLAG_IS_TO_SHIP", "FLAG_IS_STOP", "FLAG_IS_CANCELLED", "FLAG_MAX_ATTENTION", "PRIORITY", "DOCUMENT_TYPE", "FLOW_TYPE", "ROUTE", "SHIPPING_CONDITION", "CODE_DELIVERY_GROUP", "DELIVERY_BLOCK", "SHIPMENT_BLOCKED", "FLAG_IS_RELEASE_OD", "EXTERNAL_ID", "ORDER_ID_SENT_IN_TK05", "FLAG_URGENT", "FLAG_CUT_OFF", "FLAG_DMM_RECALCULATION", "DMM_PICKUP", "DMM_PACKING", "Commenti", "FLAG_ORDER_DESACTIVATED", "CREATION ORDER DATE", "UPDATED_DATE", "ISDELETED", "PRODUCT_CATEGORY") AS 
  SELECT 
    RAWTOHEX(standard_hasH('B'||OE.OENANN||OE.OENODP||PE.PECACT||PE.PECDPO||PE.PERODP||PE.PENANN||PE.PENPRE,'MD5')) AS "PK_FACT_OUTBOUND",
	TO_CHAR(MOTHER.SHDCOR,'DD/MM/YYYY') AS INTEGRATION_DATE,
	TO_CHAR(MOTHER.SHDCOR,'HH24:MI') AS INTEGRATION_TIME,
    'Reflex WEB B' AS ENVIRONMENT,
    'B' AS BUILDING,
    SUBSTR(PREP_LINES.GRADE, 1, 3) AS REFLEX_CLIENT,
    PE.PECDES AS REFLEX_DESTINATION,
	SUBSTR(PREP_LINES.WAVE, 1, 16) AS WAVING_DATE,
	SUBSTR(PREP_LINES.WAVE, 18, 3) AS WAVING_CODE,
	CASE WHEN CO.CORCDE IS NULL THEN ' ' ELSE 'SENT' END AS ORDER_INSERT_UPDATE,
    CASE WHEN nvl(SG1.CGCOD,SG2.CGCOD) IS NULL THEN ' ' ELSE 'DONE' END AS SHIPPING_REQUEST,
	CASE WHEN MOTHER.SHCDOR IS NULL THEN CHILD.SHCDOR ELSE MOTHER.SHCDOR END AS BRAND ,
	CASE WHEN MOTHER.SHRDOR IS NULL THEN CHILD.SHRDOR ELSE MOTHER.SHRDOR END AS SAP_ORDERID,
	OE.OECDES AS CUSTOMER_CODE,
	CASE WHEN MOTHER.SHPAYD IS NULL THEN CHILD.SHPAYD ELSE MOTHER.SHPAYD END AS COUNTRY,
	MOTHER.SHCTRP SAP_CARRIER,
	CG.CGCTRP AS REFLEX_CARRIER,
	TP.TPLTRP AS CARRIER_NAME,
	SUBSTR(PREP_LINES.GRADE, 1, 3) AS OWNER,
	SUBSTR(PREP_LINES.GRADE, 4, 3) AS QUALITY,
	CASE WHEN CHILD.SHCACT IS NULL THEN LPAD(PE.PENANN, 2 , '0') || '/' || LPAD(PE.PENPRE, 9, '0') ELSE LPAD(CHILD.SHNANN, 2 , '0') || '/' || LPAD(CHILD.SHNPRP, 9, '0') END AS PREPARATION_NUMBER,
	CASE WHEN MOTHER.SHDDEL IS NULL THEN TO_CHAR(CHILD.SHDDEL, 'DD/MM/YYYY') ELSE TO_CHAR(MOTHER.SHDDEL, 'DD/MM/YYYY') END AS DELIVERY_DATE,
	LPAD(PE.PEJOCA, 2, '0') || '/' || LPAD(PE.PEMOCA, 2, '0') || '/' || LPAD(PE.PESSCA, 2, '0') || LPAD(PE.PEANCA, 2, '0')  AS LOAD_DATE,
	PE.PECCHA AS LOAD_CODE,
	CASE WHEN U9.U9NARV > 0 THEN LPAD(U9.U9NARV, 2, '0') || '/' || LPAD(U9.U9NRDV, 9, '0') ELSE ' ' END AS RDV,
	CG.CGNPLC AS PLATE_NUMBER,
--	CASE WHEN U6.U6MPTR IS NOT NULL AND U6.U6MPTR > 0 THEN  LPAD(U6.U6JPTR, 2, '0') || '/' || LPAD(U6.U6MPTR, 2, '0') || '/' || LPAD(U6.U6SPTR, 2, '0') || LPAD(U6.U6APTR, 2, '0') || ' ' || SUBSTR(LPAD(U6.U6HPTR, 6, '0'), 1, 2) || ':' || SUBSTR(LPAD(U6.U6HPTR, 6, '0'), 3, 2) ELSE ' ' END AS TRUCK_DEPARTURE,
    ' ' AS TRUCK_DEPARTURE, --G Sykes/M Proserpio field disabled as currently unavailable
	CASE WHEN HU.HUCDPO IS NOT NULL THEN TO_CHAR(TK35HEURE, 'DD/MM/YYYY HH24:MI') ELSE ' ' END AS TK35_TRANSMISSION,
	CASE WHEN CHILD.SHCACT IS NULL THEN ' ' ELSE CASE WHEN TO_CHAR(CHILD.SHTTKP) = '0' THEN ' ' ELSE	TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY HH24:MI')	END END AS TK05_PACKED_DATE,
	CASE WHEN CHILD.SHCACT IS NULL THEN ' ' ELSE CASE WHEN TO_CHAR(CHILD.SHTTKS) = '0' THEN ' ' ELSE	TO_CHAR(CHILD.SHDTKS, 'DD/MM/YYYY HH24:MI')	END END AS TK05_SHIPPED_DATE,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHCINV ELSE CHILD.SHCINV  END AS INVOICE_CODE,
    YMX.MO_ARRIVAL_DATE TRUCK_GATE_ARRIVAL,
    YMX.MO_BAY_DATE TRUCK_BAY_ARRIVAL,
    YMX.MO_DEPARTURE_DATE EVENT_490,
	CASE WHEN CHILD.SHCACT IS NULL THEN CASE WHEN TO_CHAR(MOTHER.SHDINV, 'DD/MM/YYYY HH24:MI') = '01/01/0001 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDINV, 'DD/MM/YYYY HH24:MI') END    ELSE CASE WHEN TO_CHAR(CHILD.SHDINV, 'DD/MM/YYYY HH24:MI') = '01/01/0001 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDINV, 'DD/MM/YYYY HH24:MI') END  END AS INVOICE_DATE,
	CASE WHEN PE.PETSOP = '1' AND PE.PETSOL = '1' THEN 0 ELSE PREP_LINES.QTY_ORDERED END AS QUANTITY_ORDERED,
	CASE WHEN PE.PETSOP = '1' THEN PE.PETBPV ELSE PE.PETBPV END AS QUANTITY_PICKED,
	CASE WHEN PE.PETSOP = '1' THEN PE.PETBPV ELSE CASE WHEN PREP_LINES_QTY.QTY_PACK IS NULL THEN 0 ELSE PREP_LINES_QTY.QTY_PACK END END AS QUANTITY_PACKED,
--	CASE WHEN PE.PETSOP = '1' THEN 0 ELSE CASE WHEN DMS_QTY.QTY_DMS IS NULL THEN 0 ELSE DMS_QTY.QTY_DMS END  END AS QUANTITY_DMS,
	CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN 0
         WHEN DMS_SUB.QTY_DMS IS NULL THEN 0 ELSE DMS_SUB.QTY_DMS END AS QUANTITY_DMS,
	CASE WHEN PE.PETSOP = '1' THEN CASE WHEN GS.QTY_COL_EXP IS NULL THEN 0 ELSE GS.QTY_COL_EXP END  ELSE CASE WHEN QTY_COL_LOAD IS NULL THEN 0 ELSE QTY_COL_LOAD END  END AS PARCELS_LOADED,
	CASE WHEN PE.PETSOP = '1' THEN CASE WHEN GS.QTY_PIE_EXP IS NULL THEN 0 ELSE GS.QTY_PIE_EXP END  ELSE CASE WHEN QTY_PIE_LOAD IS NULL THEN 0 ELSE QTY_PIE_LOAD END  END AS PIECES_LOADED,
	CASE WHEN PE.PETSOP = '1' THEN CASE WHEN GS.QTY_COL_EXP IS NULL THEN 0 ELSE GS.QTY_COL_EXP END ELSE CASE WHEN QTY_COL IS NULL THEN 0 ELSE QTY_COL END  END AS CARTONS,
	/* NEW VERSION OF THE TK05 CANCEL FLAG */
	CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)  THEN 'CANCEL' ELSE ' ' END AS TK05_CANCEL_FLAG,
	/* CANCEL DATE NEW VERSION */
	CASE    WHEN CHILD.SHCACT IS NULL THEN 
                    CASE WHEN TO_CHAR(MOTHER.SHTTKP) = '0' AND (PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)) THEN ' ' ELSE	TO_CHAR(MOTHER.SHDTKP, 'DD/MM/YYYY HH24:MI')
                    END
            ELSE    CASE    WHEN TO_CHAR(CHILD.SHTTKP) = '0' AND (PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)) THEN ' ' 
                            ELSE    CASE WHEN TO_CHAR(CHILD.SHTTKP) = '0'  THEN ' ' ELSE TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY HH24:MI') END
                    END 
	END AS TK05_CANCEL_DATE,
	------------======================= INITIAL_PLANNED_PACKING_DATE and INITIAL_PLANNED_PACKING_TIME need matching to existing fields
	CASE WHEN MOTHER.SHDIPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDIPA, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPA, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPA, 'DD/MM/YYYY') END ) END AS INITIAL_PLANNED_PACKING_DATE,
	CASE WHEN MOTHER.SHDIPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDIPA, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPA, 'HH24:MI')    = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPA, 'HH24:MI')    END ) END AS INITIAL_PLANNED_PACKING_TIME ,
	CASE WHEN MOTHER.SHDPPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDPPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDPPA, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDPPA, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDPPA, 'DD/MM/YYYY') END ) END AS PLANNED_PACKING_DATE ,
	CASE WHEN MOTHER.SHDPPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDPPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDPPA, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDPPA, 'HH24:MI')    = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDPPA, 'HH24:MI')    END ) END AS PLANNED_PACKING_TIME ,
	------------======================= INITIAL_LATEST_PLANNED_PACKING_DATE and INITIAL_LATEST_PLANNED_PACKING_TIME need matching to existing fields
	CASE WHEN MOTHER.SHDILP IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDILP, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDILP, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDILP, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDILP, 'DD/MM/YYYY') END ) END AS INITIAL_LATEST_PLANNED_PACKING_DATE ,
	CASE WHEN MOTHER.SHDILP IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDILP, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDILP, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDILP, 'HH24:MI')    = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDILP, 'HH24:MI')    END ) END AS INITIAL_LATEST_PLANNED_PACKING_TIME ,
	CASE WHEN MOTHER.SHDLPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDLPA, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDLPA, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDLPA, 'DD/MM/YYYY') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDLPA, 'DD/MM/YYYY') END ) END AS LATEST_PLANNED_PACKING_DATE ,
	CASE WHEN MOTHER.SHDLPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDLPA, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDLPA, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDLPA, 'HH24:MI')    in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDLPA, 'HH24:MI')    END ) END AS LATEST_PLANNED_PACKING_TIME ,
	CASE WHEN MOTHER.SHDIPU IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPU, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDIPU, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPU, 'DD/MM/YYYY') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPU, 'DD/MM/YYYY') END ) END AS INITIAL_PICKUP_DATE ,
	CASE WHEN MOTHER.SHDIPU IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPU, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDIPU, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPU, 'HH24:MI')    in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPU, 'HH24:MI')    END ) END AS INITIAL_PICKUP_TIME ,
	CASE WHEN MOTHER.SHDPUP IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDPUP, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDPUP, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDPUP, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDPUP, 'DD/MM/YYYY') END ) END AS PICKUP_DATE ,
	'00:00' AS PICKUP_TIME ,
	PE.PECMOP AS FLOW,
--    PE.PECMOP AS FLOW_DESCRIPTION,
    --G Sykes/M Proserpio - added case statement so flow_description is different from "flow"
    case	when PE.PECMOP = 'C1'  then 'CA'
            when PE.PECMOP = 'EDO' then 'Export Doc (GB Malpensa)'
            when PE.PECMOP = 'ESD' then 'Export Doc '||CHR(38)||' Stop'||CHR(38)||'Go'
            when PE.PECMOP = 'EXP' then 'Export Doc (Internal)'
            when PE.PECMOP = 'FCA' then 'FCA/EXW'
            when PE.PECMOP = 'FES' then 'EXW - Export Doc '||CHR(38)||' Stop'
            when PE.PECMOP = 'FEX' then 'EXW - Export Doc'
            when PE.PECMOP = 'FOG' then 'FCA + OK to Ship'
            when PE.PECMOP = 'FOS' then 'FCA + OK to Ship '||CHR(38)||' Stop'||CHR(38)||'G'
            when PE.PECMOP = 'FSG' then 'FCA + Stop'||CHR(38)||'Go'
            when PE.PECMOP = 'HAL' then 'Hallmarking'
            when PE.PECMOP = 'MTM' then 'Make to Order, Make to Measure'
            when PE.PECMOP = 'TK9' then ''
            when PE.PECMOP = 'VAN' then 'Vanilla'
            when PE.PECMOP = 'VIN' then 'Invoice Required'
            when PE.PECMOP = 'VOK' then 'OK to Ship'
            when PE.PECMOP = 'VOS' then 'Stop '||CHR(38)||' GO '||CHR(38)||' OK to Ship'
            when PE.PECMOP = 'VSI' then 'Invoice Required '||CHR(38)||' Stop'
            when PE.PECMOP = 'VST' then 'Vanilla Stop '||CHR(38)||' GO'
            when PE.PECMOP = 'WAN' then 'do not delete'
            when PE.PECMOP = 'WTP' then 'do not delete'
		else null end AS FLOW_DESCRIPTION,
	CASE WHEN MOTHER.SHTHZM IS NULL THEN CHILD.SHTHZM ELSE MOTHER.SHTHZM END AS FLAG_HAZMAT ,
	CASE WHEN MOTHER.SHTFSC IS NULL THEN CHILD.SHTFSC ELSE MOTHER.SHTFSC END AS FLAG_FSC ,
	CASE WHEN MOTHER.SHTJEW IS NULL THEN CHILD.SHTJEW ELSE MOTHER.SHTJEW END AS FLAG_JEWELLERY ,
	FLAG_PACKAGING_JEWELRY_SUB AS FLAG_PACKAGING_JEWELLERY,
	CASE WHEN MOTHER.SHTHMK IS NULL THEN CHILD.SHTHMK ELSE MOTHER.SHTHMK END AS FLAG_HALMARKING,
	CASE WHEN MOTHER.SHSHMK IS NULL THEN CHILD.SHSHMK ELSE MOTHER.SHSHMK END AS HALMARKING_STATUS ,
	CASE WHEN MOTHER.SHTCIT IS NULL THEN CHILD.SHTCIT ELSE MOTHER.SHTCIT END AS FLAG_IMPACT_CITES,
	CASE WHEN MOTHER.SHSCIT IS NULL THEN CHILD.SHSCIT ELSE MOTHER.SHSCIT END AS CITES_STATUS,
	CASE WHEN VAS.VAS_CODE IS NULL THEN '0' ELSE '1' END AS VAS_FLAG, --2025-03-17 
	VAS.VAS_CODE AS VAS_CODE , --2025-03-17 
	VAS.VAS_CLUSTER AS VAS_CLUSTER,  --2025-03-17 
	MOTHER.SHMOTR AS SAP_MEAN_OF_TRANSPORT,
	CG.CGCTMT AS REFLEX_MEAN_OF_TRANSPORT,
	CASE WHEN MOTHER.SHCLUS IS NULL THEN CHILD.SHCLUS ELSE MOTHER.SHCLUS END AS "CLUSTER" ,
	CASE WHEN MOTHER.SHCHAN IS NULL THEN CHILD.SHCHAN ELSE MOTHER.SHCHAN END AS CHANNEL ,
	CASE WHEN MOTHER.SHTCEE IS NULL THEN (CASE WHEN CHILD.SHTCEE = '1' THEN 'CEE' ELSE 'EXTRA' END ) ELSE (CASE WHEN MOTHER.SHTCEE = '1' THEN 'CEE' ELSE 'EXTRA' END ) END AS FLAG_CEE ,
	CASE WHEN MOTHER.SHTTSP IS NULL THEN CHILD.SHTTSP ELSE MOTHER.SHTTSP END AS FLAG_IS_TO_SHIP ,
	CASE WHEN MOTHER.SHTSTP IS NULL THEN CHILD.SHTSTP ELSE MOTHER.SHTSTP END AS FLAG_IS_STOP ,
	/* NEW VERSION OF THE FLAG IS CANCELLED COLUMN */
	CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN '1' ELSE '0' END AS FLAG_IS_CANCELLED ,
	CASE WHEN MOTHER.SHTMAA IS NULL THEN CHILD.SHTMAA ELSE MOTHER.SHTMAA END AS FLAG_MAX_ATTENTION ,
	CASE WHEN MOTHER.SHNPRI IS NULL THEN CHILD.SHNPRI ELSE MOTHER.SHNPRI END AS PRIORITY ,
	CASE WHEN MOTHER.SHDOCT IS NULL THEN CHILD.SHDOCT ELSE MOTHER.SHDOCT END AS DOCUMENT_TYPE ,
	CASE WHEN MOTHER.SHFLOT IS NULL THEN CHILD.SHFLOT ELSE MOTHER.SHFLOT END AS FLOW_TYPE ,
	CASE WHEN MOTHER.SHLROU IS NULL THEN CHILD.SHLROU ELSE MOTHER.SHLROU END AS ROUTE ,
	CASE WHEN MOTHER.SHLSHC IS NULL THEN CHILD.SHLSHC ELSE MOTHER.SHLSHC END AS SHIPPING_CONDITION ,
	CASE WHEN MOTHER.SHCDEG IS NULL THEN CHILD.SHCDEG ELSE MOTHER.SHCDEG END AS CODE_DELIVERY_GROUP ,
	CASE WHEN CHILD.SHLDEB IS NULL THEN MOTHER.SHLDEB ELSE CHILD.SHLDEB END AS DELIVERY_BLOCK,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHLSHB ELSE CHILD.SHLSHB END AS SHIPMENT_BLOCKED,
	CASE WHEN MOTHER.SHTREO IS NULL THEN CHILD.SHTREO ELSE MOTHER.SHTREO END AS FLAG_IS_RELEASE_OD ,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHREXT ELSE CHILD.SHREXT END AS EXTERNAL_ID,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHREX5 ELSE CHILD.SHREX5 END AS ORDER_ID_SENT_IN_TK05,
	CASE WHEN CHILD.SHTURG IS NULL THEN MOTHER.SHTURG ELSE CHILD.SHTURG END AS FLAG_URGENT,
	CASE WHEN CHILD.SHTCUT IS NULL THEN MOTHER.SHTCUT ELSE CHILD.SHTCUT END AS FLAG_CUT_OFF,
	CASE WHEN CHILD.SHTDMM IS NULL THEN MOTHER.SHTDMM ELSE CHILD.SHTDMM END AS FLAG_DMM_RECALCULATION,
	CASE WHEN MOTHER.SHDCPU IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDCPU, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDCPU, 'DD/MM/YYYY HH24:MI') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDCPU, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDCPU, 'DD/MM/YYYY HH24:MI') END ) END AS DMM_PICKUP ,
	CASE WHEN MOTHER.SHDCPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDCPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDCPA, 'DD/MM/YYYY HH24:MI') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDCPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDCPA, 'DD/MM/YYYY HH24:MI') END ) END AS DMM_PACKING ,
	substr(PE."Commenti",1,70) AS "Commenti",
	/*CASE WHEN PE.PETOPD  ='1' THEN 'YES' ELSE 'NO' END AS FLAG_ORDER_DESACTIVATED,*/
    PE.PETOPD AS FLAG_ORDER_DESACTIVATED,
	CASE WHEN MOTHER.SHDCOR IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDCOR, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDCOR, 'DD/MM/YYYY HH24:MI') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDCOR, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDCOR, 'DD/MM/YYYY HH24:MI') END ) END AS "CREATION ORDER DATE",
	GREATEST(nvl(OE.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(OE.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
			,nvl(PREP_LINES.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(PE.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(PE.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(MOTHER.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(MOTHER.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(CHILD.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(CHILD.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(CG.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(CG.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(U9.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(U9.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(U6.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(U6.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(TP.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(TP.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(HU.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(HU.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(PREP_LINES_QTY.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES_QTY.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(GS.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(GS.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(I37.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(I37.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
			)
	AS UPDATED_DATE,
	'0' as ISDELETED,
    PREP_LINES.PRODCAT AS PRODUCT_CATEGORY
FROM GG_KERI_PRD.HLODPEP OE
INNER JOIN	(
			SELECT
			P1.PECDOD , P1.P1CACT ,P1.P1NANO ,P1.P1NODP, P1.P1CDPO, P1.P1NANP, P1.P1NPRE, MAX(P1.P1CPRP || P1.P1CQAL) AS GRADE , SUM(P1.P1QODP) AS QTY_ORDERED,
				MIN((CASE WHEN P1.P1JOCA > 0 THEN CAST(LPAD(P1.P1SSCA, 2, '0') || LPAD(P1.P1ANCA, 2, '0') || '-' || LPAD(P1.P1MOCA, 2, '0') || '-' || LPAD(P1.P1JOCA, 2, '0')  
				|| ' ' || SUBSTR(lpad(nvl(LC.LCHDCA,0),6,0),1,2) ||':'|| SUBSTR(lpad(nvl(LC.LCHDCA,0),6,0),3,2) || ' ' || P1.P1CDLA AS CHAR(20)) ELSE ' ' END)) AS WAVE
                ,MAX(CA.CAPRCA) AS PRODCAT --BI FIELD
                ,MAX(CASE WHEN P1.P1CART LIKE '7%' THEN 1 ELSE 0 END) AS FLAG_PACKAGING_JEWELRY_SUB
				,MAX(P1.GGS_CREATED) GGS_CREATED, MAX(P1.GGS_UPDATED) GGS_UPDATED
			FROM 
				GG_KERI_PRD.HLPRPLP P1
            INNER JOIN GG_KERI_PRD.KBCARTP CA on CA.CACACT = P1.P1CACT AND P1.P1CART = CA.CASKUC AND trunc(CA.GGS_DELETED) IS NULL --BI ADDITIONAL JOIN
			LEFT  JOIN GG_KERI_PRD.HLLANCP LC ON LC.LCCDPO=P1.P1CDPO AND LC.LCSSCA=P1.P1SSCA AND LC.LCANCA=P1.P1ANCA AND LC.LCMOCA=P1.P1MOCA AND LC.LCJOCA=P1.P1JOCA AND LC.LCCDLA=P1.P1CDLA AND trunc(LC.GGS_DELETED) IS null
			WHERE P1.P1CACT = '100' AND P1.P1CDPO='001' AND trunc(P1.GGS_DELETED) IS NULL
			GROUP BY P1.PECDOD, P1.P1CACT, P1.P1NANO, P1.P1NODP, P1.P1CDPO, P1.P1NANP, P1.P1NPRE
			) PREP_LINES ON PREP_LINES.PECDOD = OE.OECDPO AND PREP_LINES.P1CACT = OE.OECACT AND PREP_LINES.P1NANO = OE.OENANN AND PREP_LINES.P1NODP = OE.OENODP
INNER JOIN	(
            SELECT *
            FROM GG_KERI_PRD.HLPRENP PE
            LEFT  JOIN (select CONCOM, listagg(COTXTC, ' | ' ON OVERFLOW TRUNCATE '...') WITHIN GROUP (order by CONLCO) "Commenti" from GG_KERI_PRD.HLCOMMP CO group by CONCOM) CO ON PE.PENCOM = CO.CONCOM
            WHERE PE.PECACT='100' AND PE.PECDPO='001' AND trunc(PE.GGS_DELETED) IS NULL
            ) PE ON PREP_LINES.P1CDPO = PE.PECDPO AND PREP_LINES.P1CACT = PE.PECACT AND PE.PENANN = PREP_LINES.P1NANP AND PE.PENPRE = PREP_LINES.P1NPRE 
LEFT  JOIN GG_KERI_PRD.KBSHIPP MOTHER ON MOTHER.SHCDEP = OECDPO AND MOTHER.SHCACT = OECACT AND MOTHER.SHCDOR = OECDDO AND MOTHER.SHRDOR = OERODP AND SHNANN = 0 AND trunc(MOTHER.GGS_DELETED) IS NULL
LEFT  JOIN GG_KERI_PRD.KBSHIPP CHILD ON CHILD.SHCDEP = PECDPO AND CHILD.SHCACT = PECACT AND  CHILD.SHNANN = PENANN AND CHILD.SHNPRP = PENPRE AND trunc(CHILD.GGS_DELETED) IS NULL
LEFT  JOIN GG_KERI_PRD.HLCHARP CG ON CG.CGCDPO = PE.PECDPO AND PE.PESSCA = CG.CGSSCA AND PE.PEANCA = CG.CGANCA AND PE.PEMOCA = CG.CGMOCA AND PE.PEJOCA = CG.CGJOCA AND PE.PECCHA = CG.CGCCHA AND trunc(CG.GGS_DELETED) IS NULL
LEFT  JOIN GG_KERI_PRD.HLRDVCP U9 ON U9.U9CDPO = CG.CGCDPO AND U9.U9SSCA = CG.CGSSCA AND U9.U9ANCA = CG.CGANCA AND U9.U9MOCA = CG.CGMOCA AND U9.U9JOCA = CG.CGJOCA AND U9.U9CCHA = CG.CGCCHA AND trunc(U9.GGS_DELETED) IS NULL
LEFT  JOIN GG_KERI_PRD.HLRDVTP U6 ON U9.U9CDPO = U6.U6CDPO AND U9.U9NARV = U6.U6NARV AND U9.U9NRDV = U6.U6NRDV AND trunc(U6.GGS_DELETED) IS NULL
LEFT  JOIN GG_KERI_PRD.HLTRSPP TP ON CG.CGCTRP = TP.TPCTRP AND trunc(TP.GGS_DELETED) IS NULL
LEFT  JOIN  (	
            SELECT HUCDPO, HUDNUM, HUPORD, MAX(HUDMAJ) AS TK35HEURE, max(GGS_CREATED) GGS_CREATED, max(GGS_UPDATED) GGS_UPDATED
            --G Sykes / M Proserpio - changed HUDCRE to HUDMAJ 
            FROM GG_KERI_PRD.KB35HUP
            WHERE HUCDPO = '001' AND trunc(GGS_DELETED) IS NULL
            GROUP BY HUCDPO, HUDNUM, HUPORD
            ) HU ON PE.PECDPO = HU.HUCDPO AND PE.PERODP = HU.HUDNUM AND HU.HUPORD = LPAD(PE.PENANN, 2, '0') || LPAD(PE.PENPRE, 9, '0') 
LEFT  JOIN	(
			SELECT P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE, SUM(LG.LGQLPG) AS QTY_PACK
				, SUM(CASE WHEN EM.EMC1EM = 'DMS' THEN LG.LGQLPG ELSE 0 END) AS QTY_DMS2
				, COUNT(DISTINCT GE.GENCOL) AS QTY_COL , COUNT(DISTINCT CASE WHEN SU.SUTSCG = '1' THEN GE.GENCOL ELSE NULL END) AS QTY_COL_LOAD
				, SUM(CASE WHEN SU.SUTSCG = '1' THEN LG.LGQLPG ELSE 0 END) AS QTY_PIE_LOAD
                , max(GE.GGS_CREATED) GGS_CREATED, max(GE.GGS_UPDATED) GGS_UPDATED
			FROM GG_KERI_PRD.HLPRPLP P1
			INNER JOIN GG_KERI_PRD.HLLPRGP LG ON LG.LGCDPO = P1.P1CDPO AND LG.LGCACT = P1.P1CACT AND LG.LGNANN = P1.P1NANN AND LG.LGNLPR = P1.P1NLPR AND trunc(LG.GGS_DELETED) IS NULL
			INNER JOIN GG_KERI_PRD.HLGEINP GE ON GE.GENGEI = LG.LGNGEI AND LG.LGCDPO = GE.GECDPO AND LG.LGCACT = GE.GECACT AND GE.GENCOL <> ' '   AND trunc(GE.GGS_DELETED) IS NULL
			INNER JOIN GG_KERI_PRD.HLSUPPP SU ON SU.SUCDPO = LG.LGCDPO AND SU.SUNSUP = GE.GENSUP AND trunc(SU.GGS_DELETED) IS NULL
			INNER JOIN GG_KERI_PRD.HLEMPLP EM ON SU.SUCDPO = EM.EMCDPO AND SU.SUNEMP = EM.EMNEMP AND trunc(EM.GGS_DELETED) IS NULL
			WHERE trunc(P1.GGS_DELETED) IS NULL
			GROUP BY P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE
			) PREP_LINES_QTY ON PREP_LINES_QTY.P1CDPO = PE.PECDPO AND PREP_LINES_QTY.P1CACT = PE.PECACT AND PREP_LINES_QTY.P1NANP = PE.PENANN AND  PREP_LINES_QTY.P1NPRE = PE.PENPRE
LEFT  JOIN  (
            SELECT P1CACT,P1CDPO,P1NANP,P1NPRE,SUM(P1QODP) as QTY_DMS --,VLCFPR 
            FROM GG_KERI_PRD.HLPRPLP
            INNER JOIN GG_KERI_PRD.HLARVLP ON P1CACT=VLCACT AND P1CART=VLCART AND VLCVLA = '03'
            WHERE VLCFPR IN 'DMS'
            GROUP BY P1CACT,P1CDPO,P1NANP,P1NPRE
            ) DMS_SUB ON DMS_SUB.P1CDPO = PE.PECDPO AND DMS_SUB.P1CACT = PE.PECACT AND DMS_SUB.P1NANP = PE.PENANN AND  DMS_SUB.P1NPRE = PE.PENPRE
LEFT  JOIN	(
			SELECT GS.GSCDPO, GS.GSCACT, GS.GSNAPP, GS.GSNPRE, COUNT(DISTINCT GS.GSNCOL) AS QTY_COL_EXP, SUM(GS.GSQGEI) AS QTY_PIE_EXP, max(GS.GGS_CREATED) GGS_CREATED, max(GS.GGS_UPDATED) GGS_UPDATED
			FROM GG_KERI_PRD.HLPRPLP P1
			INNER JOIN GG_KERI_PRD.HLGESOP GS ON GS.GSCACT = P1.P1CACT AND GS.GSCDPO = P1.P1CDPO AND GS.GSNALI = P1.P1NANN AND GS.GSNLPR = P1.P1NLPR AND trunc(GS.GGS_DELETED) IS NULL
			WHERE P1.P1CACT='100' AND P1.P1CDPO='001' AND trunc(P1.GGS_DELETED) IS NULL
			GROUP BY GS.GSCDPO, GS.GSCACT, GS.GSNAPP, GS.GSNPRE
			) GS ON GS.GSCDPO = PE.PECDPO AND GS.GSCACT = PE.PECACT AND GS.GSNAPP = PE.PENANN AND GS.GSNPRE = PE.PENPRE
--LEFT  JOIN	(
--			SELECT I37ORNB, max(GGS_CREATED) GGS_CREATED, max(GGS_UPDATED) GGS_UPDATED FROM GG_KERI_PRD.KBOR12P WHERE I37VST = '80-00' AND trunc(GGS_DELETED) IS NULL
--			GROUP BY   I37ORNB --hardcoded values for VAS_TYPE and VAS_LAYOUT based on these join conditions
--			) I37 ON I37.I37ORNB = OE.OERODP 
			-- G Sykes/M Proserpio updated VAS logic using table FACT_KER_02_OUTBOUND_VAS (updated first in procedure)
LEFT  JOIN	FACT_KER_02_OUTBOUND_VAS VAS ON PE.PECDPO = VAS.P1CDPO  AND PE.PECACT = VAS.P1CACT AND PE.PENANN = VAS.P1NANP AND PE.PENPRE = VAS.P1NPRE
LEFT  JOIN	(
			SELECT CO.CORCDE FROM
                GG_KERI_PRD.KBDORDP OR_
			INNER JOIN GG_KERI_PRD.KBMCLPP CO ON CO.COCDPO = OR_.ORCDPO AND CO.COCACT = OR_.ORCACT AND CO.COSTSE = OR_.ORORID AND trunc(CO.GGS_DELETED) IS NULL -- AND ORORID <> ' '
			WHERE OR_.ORCDPO = '001' AND OR_.ORCACT = '100' AND trunc(OR_.GGS_DELETED) IS NULL
			GROUP BY CO.CORCDE
			) CO ON CO.CORCDE = PE.PERODP
/*BI ADDITIONAL JOIN*/
LEFT  JOIN  (
            SELECT SUBSTR(SG.SGSRID, 1, 6) AS CGCOD, SUBSTR(SG.SGSRID, 7, 2) AS CGSIE, SUBSTR(SG.SGSRID, 9, 2) AS CGANN, SUBSTR(SG.SGSRID, 11, 2) AS CGMOI, SUBSTR(SG.SGSRID, 13, 2) AS CGJOU ,
            MAX(SG.GGS_UPDATED)AS GGS_UPDATED ,MAX(SG.GGS_CREATED) AS GGS_CREATED 
            FROM GG_KERI_PRD.KBDSSLP SG
            WHERE SG.SGCDPO = '001' AND SG.SGCACT = '100' AND SUBSTR(SG.SGSRID, 9, 1) <> '_' AND trunc(SG.GGS_DELETED) IS NULL
            GROUP BY SUBSTR(SG.SGSRID, 1, 6) , SUBSTR(SG.SGSRID, 7, 2) , SUBSTR(SG.SGSRID, 9, 2) , SUBSTR(SG.SGSRID, 11, 2), SUBSTR(SG.SGSRID, 13, 2)
            )SG1 ON SG1.CGCOD = PE.PECCHA AND SG1.CGSIE = PE.PESSCA AND SG1.CGANN = PE.PEANCA AND SG1.CGMOI = PE.PEMOCA AND SG1.CGJOU = PE.PEJOCA
            /*join on load code & date*/
            /*difference between SG1 and SG2 is the substrings used for the join*/
/*BI ADDITIONAL JOIN*/
LEFT  JOIN  (
            SELECT SUBSTR(SG.SGSRID, 10, 6) AS CGCOD, SUBSTR(SG.SGSRID, 1, 2) AS CGSIE, SUBSTR(SG.SGSRID, 3, 2) AS CGANN, SUBSTR(SG.SGSRID, 5, 2) AS CGMOI, SUBSTR(SG.SGSRID, 7, 2) AS CGJOU,
            MAX(SG.GGS_UPDATED)AS GGS_UPDATED ,MAX(SG.GGS_CREATED) AS GGS_CREATED 
            FROM GG_KERI_PRD.KBDSSLP SG
            WHERE SG.SGCDPO = '001' AND SG.SGCACT = '100' AND SUBSTR(SG.SGSRID, 9, 1) = '_' AND trunc(SG.GGS_DELETED) IS NULL
            GROUP BY SUBSTR(SG.SGSRID, 10, 6) , SUBSTR(SG.SGSRID, 1, 2) , SUBSTR(SG.SGSRID, 3, 2) , SUBSTR(SG.SGSRID, 5, 2), SUBSTR(SG.SGSRID, 7, 2)
            )SG2 ON SG2.CGCOD = PE.PECCHA AND SG2.CGSIE = PE.PESSCA AND SG2.CGANN = PE.PEANCA AND SG2.CGMOI = PE.PEMOCA AND SG2.CGJOU = PE.PEJOCA
            /*join on load code & date*/
/* JOINS WITH XP* TABLES TAKEN AWAY*/
/*BI ADDITIONAL JOIN - YMS*/
LEFT JOIN   (
            SELECT 
            TD.TDTREFB,
            MAX(YMA.MO_ARRIVAL_DATE) AS MO_ARRIVAL_DATE,
            MAX(YMB.MO_BAY_DATE) AS MO_BAY_DATE 	,
            MAX(YMD.MO_DEPARTURE_DATE) AS MO_DEPARTURE_DATE
            FROM GG_KERIYMS_PRD.TIEADRSLOTTASK TD
			LEFT  JOIN  (
						SELECT YM1.IDSITE,YM1.IDDEPOT,YM1.MOSTATE,YM1.MOAPPOINTMENT,MIN (MOARRIVALDATE) AS MO_ARRIVAL_DATE , MAX(YM1.MOLICENCEPLATE1) AS MOLICENCEPLATE1,TS.TSLID
						FROM GG_KERIYMS_PRD.HISTORYMOVEMENT YM1 
						INNER JOIN  GG_KERIYMS_PRD.TIEADRSLOT TS   ON TRUNC(TS.GGS_DELETED) IS NULL AND YM1.MOAPPOINTMENT = TS.TSLNUM
						WHERE  YM1.IDSITE = '1' AND YM1.IDDEPOT = '4' AND YM1.MOSTATE = 20
						GROUP BY YM1.IDSITE,YM1.IDDEPOT,YM1.MOSTATE,YM1.MOAPPOINTMENT,TS.TSLID
						) YMA ON  YMA.TSLID = TD.TDTTSLID 
            LEFT  JOIN  (
						SELECT YM2.IDSITE,YM2.IDDEPOT,YM2.MOSTATE,YM2.MOAPPOINTMENT,MIN (YM2.HYTIMESTAMP) AS MO_BAY_DATE , MIN(D.DONAME) AS DOCK,TS.TSLID
						FROM GG_KERIYMS_PRD.HISTORYMOVEMENT YM2 
						INNER JOIN GG_KERIYMS_PRD.DOCK D ON  D.IDDOCK = YM2.IDDOCK 
						INNER JOIN  GG_KERIYMS_PRD.TIEADRSLOT TS  ON TRUNC(TS.GGS_DELETED) IS NULL AND YM2.MOAPPOINTMENT = TS.TSLNUM
						WHERE  YM2.IDSITE = '1' AND YM2.IDDEPOT = '4' AND YM2.MOSTATE = 60 AND YM2.IDSTATUS = 3
						GROUP BY YM2.IDSITE,YM2.IDDEPOT,YM2.MOSTATE,YM2.MOAPPOINTMENT,TS.TSLID
						) YMB ON  YMB.TSLID = TD.TDTTSLID 
            LEFT  JOIN  (
						SELECT YM4.IDSITE,YM4.IDDEPOT,YM4.MOSTATE,YM4.MOAPPOINTMENT,MIN (HYTIMESTAMP) AS MO_DEPARTURE_DATE  , MIN(D.DONAME) AS DOCK,TS.TSLID
						FROM GG_KERIYMS_PRD.HISTORYMOVEMENT YM4 
						INNER JOIN GG_KERIYMS_PRD.DOCK D ON  D.IDDOCK = YM4.IDDOCK 
						INNER JOIN  GG_KERIYMS_PRD.TIEADRSLOT TS   ON TRUNC(TS.GGS_DELETED) IS NULL AND YM4.MOAPPOINTMENT = TS.TSLNUM
						WHERE  YM4.IDSITE = '1' AND YM4.IDDEPOT = '4' AND YM4.MOSTATE = 60 AND YM4.IDSTATUS = 11
						GROUP BY YM4.IDSITE,YM4.IDDEPOT,YM4.MOSTATE,YM4.MOAPPOINTMENT,TS.TSLID
						) YMBE ON YMBE.TSLID = TD.TDTTSLID 
            LEFT  JOIN  (
						SELECT YM3.IDSITE,YM3.IDDEPOT,YM3.MOSTATE,YM3.MOAPPOINTMENT,MIN (YM3.MODEPARTUREDATE ) AS MO_DEPARTURE_DATE,TS.TSLID
						FROM GG_KERIYMS_PRD.HISTORYMOVEMENT YM3 
						INNER JOIN  GG_KERIYMS_PRD.TIEADRSLOT TS   ON TRUNC(TS.GGS_DELETED) IS NULL AND YM3.MOAPPOINTMENT = TS.TSLNUM
						WHERE  YM3.IDSITE = '1' AND YM3.IDDEPOT = '4' AND YM3.MOSTATE = 99
						GROUP BY YM3.IDSITE,YM3.IDDEPOT,YM3.MOSTATE,YM3.MOAPPOINTMENT,TS.TSLID
						) YMD ON  YMD.TSLID = TD.TDTTSLID 
			WHERE TRUNC(TD.GGS_DELETED) IS NULL
			GROUP BY TD.TDTREFB
			)YMX ON  YMX.TDTREFB = U6.U6LRDV 
WHERE 1=1
    AND OE.OECDPO = '001'
    AND OE.OECACT = '100'  
    AND OE.GGS_DELETED IS NULL
    AND GREATEST(nvl(OE.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(OE.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(PREP_LINES.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(PE.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(PE.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(MOTHER.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(MOTHER.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(CHILD.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(CHILD.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(CG.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(CG.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(U9.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(U9.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(U6.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(U6.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(TP.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(TP.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(HU.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(HU.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(PREP_LINES_QTY.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES_QTY.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(GS.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(GS.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(I37.GGS_CREATED,TIMESTAMP'1900-01-01 00:00:01'), nvl(I37.GGS_UPDATED,TIMESTAMP'1900-01-01 00:00:01')
                )
            >= (SELECT CAST(or2.LAST_UPDATE - interval '4' hour AS DATE) FROM SMART_BI.OBJECT_RUN_KERING_B or2 WHERE "OBJECT" = '02_OUTBOUND')
--            > to_date('2025-01-30','YYYY-MM-DD') 
ORDER BY
    MOTHER.SHDILP ,
	LPAD(PE.PESSCA, 2, '0') || LPAD(PE.PEANCA, 2, '0') || LPAD(PE.PEMOCA, 2, '0') || LPAD(PE.PEJOCA, 2, '0') || ' ' || PE.PECCHA,
    MOTHER.SHRDOR;